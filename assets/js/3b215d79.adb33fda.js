"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[6549],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,h=m["".concat(l,".").concat(d)]||m[d]||s[d]||a;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6472:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],c={},l=void 0,p={unversionedId:"old-wiki/How-to-upgrade-Node",id:"old-wiki/How-to-upgrade-Node",isDocsHomePage:!1,title:"How-to-upgrade-Node",description:"1. Submit a PR that updates node to the new version in https://github.com/transcom/circleci-docker/. Here's an example.",source:"@site/docs/old-wiki/How-to-upgrade-Node.md",sourceDirName:"old-wiki",slug:"/old-wiki/How-to-upgrade-Node",permalink:"/docs/old-wiki/How-to-upgrade-Node",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/old-wiki/How-to-upgrade-Node.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"[WIP] How to run Frontend test coverage reports",permalink:"/docs/old-wiki/How-to-run-Frontend-test-coverage-reports"},next:{title:"Description",permalink:"/docs/old-wiki/How-to-use-the-benchmarking-script-with-Puppeteer-and-Lighthouse"}},u=[],s={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Submit a PR that updates node to the new version in ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/transcom/circleci-docker/"},"https://github.com/transcom/circleci-docker/"),". ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/transcom/circleci-docker/pull/130"},"Here's an example"),"."),(0,a.kt)("li",{parentName:"ol"},"Look for the hash here: ",(0,a.kt)("a",{parentName:"li",href:"https://hub.docker.com/r/milmove/circleci-docker/tags"},"https://hub.docker.com/r/milmove/circleci-docker/tags")),(0,a.kt)("li",{parentName:"ol"},"In the transcom/mymove repo, create a PR to update node. ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/transcom/mymove/pull/6878"},"Here's an example")," && ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/transcom/mymove/pull/6904"},"this PR"))),(0,a.kt)("p",null,"Things to modify:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Bump the ",(0,a.kt)("inlineCode",{parentName:"li"},".node_version")),(0,a.kt)("li",{parentName:"ul"},"Modify the instances of ",(0,a.kt)("inlineCode",{parentName:"li"},"milmove/circleci-docker:milmove-app-")," and replace the hash w/ the one found in step 2. (I used the PR branch name rather than hash so it would pull any changes I made over on the ",(0,a.kt)("inlineCode",{parentName:"li"},"circleci-docker")," PR without having to update the hash each time I made a change)"),(0,a.kt)("li",{parentName:"ul"},"update ",(0,a.kt)("inlineCode",{parentName:"li"},"check-node-version")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"prereqs")),(0,a.kt)("li",{parentName:"ul"},"Do a find and replace to update references of the prior node version with the new node version")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"make clean build")," and verify that the desired version of Node is being used"),(0,a.kt)("li",{parentName:"ol"},"Get reviews for the 2 PRs to check your work. "),(0,a.kt)("li",{parentName:"ol"},"Merge the PR from step 1"),(0,a.kt)("li",{parentName:"ol"},"Find the new image hash from the Docker hub "),(0,a.kt)("li",{parentName:"ol"},"Update the transcom/mymove PR to use the hash from step 7"),(0,a.kt)("li",{parentName:"ol"},"Test again to make sure everything works as expected."),(0,a.kt)("li",{parentName:"ol"},"Announce in #prac-engineering that you will be updating node and any instructions ",(0,a.kt)("a",{parentName:"li",href:"https://ustcdp3.slack.com/archives/CP6PTUPQF/p1624996730029000"},"An example slack msg")),(0,a.kt)("li",{parentName:"ol"},"Merge the PR in transcom/mymove")))}m.isMDXComponent=!0}}]);