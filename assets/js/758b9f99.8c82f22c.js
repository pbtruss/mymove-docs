"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[2710],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,k=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return n?i.createElement(k,l(l({ref:t},d),{},{components:n})):i.createElement(k,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1600:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return c}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),l=["components"],o={},s="Table of Contents",p={unversionedId:"dev/testing/running-tests/Acceptance-Testing-Prime-API-Endpoints",id:"dev/testing/running-tests/Acceptance-Testing-Prime-API-Endpoints",isDocsHomePage:!1,title:"Table of Contents",description:"- Current Prime API Endpoints",source:"@site/docs/dev/testing/running-tests/Acceptance-Testing-Prime-API-Endpoints.md",sourceDirName:"dev/testing/running-tests",slug:"/dev/testing/running-tests/Acceptance-Testing-Prime-API-Endpoints",permalink:"/mymove-docs/docs/dev/testing/running-tests/Acceptance-Testing-Prime-API-Endpoints",editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/dev/testing/running-tests/Acceptance-Testing-Prime-API-Endpoints.md",tags:[],version:"current",frontMatter:{},sidebar:"devSidebar",previous:{title:"Acceptance-Testing-Payment-Requests",permalink:"/mymove-docs/docs/dev/testing/running-tests/Acceptance-Testing-Payment-Requests"},next:{title:"Acceptance-Testing-Syncada-EDI-Invoicing",permalink:"/mymove-docs/docs/dev/testing/running-tests/Acceptance-Testing-Syncada-EDI-Invoicing"}},d=[{value:"Current Prime API Endpoints",id:"current-prime-api-endpoints",children:[]},{value:"Checklist for Acceptance Testing Prime API Endpoints",id:"checklist-for-acceptance-testing-prime-api-endpoints",children:[{value:"1. Verify Business Logic",id:"1-verify-business-logic",children:[]},{value:"2. Validate Requests",id:"2-validate-requests",children:[]},{value:"3. Validate Responses",id:"3-validate-responses",children:[]},{value:"4. Validate Errors",id:"4-validate-errors",children:[]}]}],u={toc:d};function c(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"table-of-contents"},"Table of Contents"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#current-prime-api-endpoints"},"Current Prime API Endpoints")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#checklist-for-acceptance-testing-prime-api-endpoints"},"Checklist for Acceptance Testing Prime API Endpoints"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#1-verify-business-logic"},"1. Verify Business Logic")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#2-validate-requests"},"2. Validate Requests")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#3-validate-responses"},"3. Validate Responses")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#4-validate-errors"},"4. Validate Errors"))))),(0,a.kt)("h2",{id:"current-prime-api-endpoints"},"Current Prime API Endpoints"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fetchMTOUpdates")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"updateMTOPostCounselingInformation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createMTOShipment")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"updateMTOShipment")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createMTOServiceItem")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createPaymentRequest")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createUpload")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createMTOAgent"))),(0,a.kt)("h2",{id:"checklist-for-acceptance-testing-prime-api-endpoints"},"Checklist for Acceptance Testing Prime API Endpoints"),(0,a.kt)("h3",{id:"1-verify-business-logic"},"1. Verify Business Logic"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"available_to_prime_at")," will have a timestamp if in production environment"),(0,a.kt)("li",{parentName:"ul"},"business logic should be tested in test cases")),(0,a.kt)("h3",{id:"2-validate-requests"},"2. Validate Requests"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"all requests fields should be defined in ",(0,a.kt)("inlineCode",{parentName:"li"},"prime.yaml")),(0,a.kt)("li",{parentName:"ul"},"un/required fields should properly denoted  "),(0,a.kt)("li",{parentName:"ul"},"fields that are provided in the response but not valid in the request should be marked ",(0,a.kt)("inlineCode",{parentName:"li"},"readOnly")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"etag")," should be marked as ",(0,a.kt)("inlineCode",{parentName:"li"},"readOnly")," in the yaml - It should never be in the request payload"),(0,a.kt)("li",{parentName:"ul"},"all fields should have a meaningful description visible in the Redoc")),(0,a.kt)("h3",{id:"3-validate-responses"},"3. Validate Responses"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"all response fields should be defined in ",(0,a.kt)("inlineCode",{parentName:"li"},"prime.yaml")),(0,a.kt)("li",{parentName:"ul"},"un/required fields should properly denoted  "),(0,a.kt)("li",{parentName:"ul"},"fields that are used in the request but not valid in the response should be marked ",(0,a.kt)("inlineCode",{parentName:"li"},"writeOnly")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pointOfContact")," should be marked as ",(0,a.kt)("inlineCode",{parentName:"li"},"writeOnly")," - It's a logged field which should never be in the response. "),(0,a.kt)("li",{parentName:"ul"},"all fields should have a meaningful description visible in the Redoc")),(0,a.kt)("h3",{id:"4-validate-errors"},"4. Validate Errors"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"all error fields should be defined in ",(0,a.kt)("inlineCode",{parentName:"li"},"prime.yaml")),(0,a.kt)("li",{parentName:"ul"},"error responses should be meaningful and follow our ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/transcom/mymove/wiki/API-Errors"},"desired pattern"),"."),(0,a.kt)("li",{parentName:"ul"},"errors we like to use:")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"401 - Unauthorized"),": requester is not properly authorized to make request"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"422 - Unprocessable Entity"),": validation errors, missing values, invalid values"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"409 - Conflict Error"),": Cannot process the request due to the current state of the server (for e.g., we cannot change this value once this date is past)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"404 - Not Found"),": Requested resource does not exist and the server does not know if it ever existed.")),(0,a.kt)("p",null,"For more detail on how to generate and return errors, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/wiki/API-Errors"},"API Errors \xb7 transcom/mymove Wiki")),(0,a.kt)("p",null,"For a working complete list of MTO database field description, ",(0,a.kt)("a",{parentName:"p",href:"https://docs.google.com/spreadsheets/d/1pQVZdi5ttQ67DIcBAgk9INUH9oVqTDpzL2ciMAJuBV8/edit#gid=0"},"see here")))}c.isMDXComponent=!0}}]);