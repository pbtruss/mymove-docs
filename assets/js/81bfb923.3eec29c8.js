"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[3362],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=i,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var d=2;d<r;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},68101:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(87462),i=(n(67294),n(3905));const r={title:"0052 Use data-testid as an attribute for finding components in tests"},o="Use `data-testid` as an attribute for finding components in tests",s={unversionedId:"adrs/use-data-testid",id:"adrs/use-data-testid",title:"0052 Use data-testid as an attribute for finding components in tests",description:"Jira Story",source:"@site/docs/adrs/0052-use-data-testid.md",sourceDirName:"adrs",slug:"/adrs/use-data-testid",permalink:"/mymove-docs/docs/adrs/use-data-testid",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/adrs/0052-use-data-testid.md",tags:[],version:"current",sidebarPosition:52,frontMatter:{title:"0052 Use data-testid as an attribute for finding components in tests"},sidebar:"adrsSidebar",previous:{title:"0051 Use only Swagger supported formats for dates",permalink:"/mymove-docs/docs/adrs/swagger-date-formats"},next:{title:"0053 Use React Query for Office App API interactions",permalink:"/mymove-docs/docs/adrs/use-react-query-office-app"}},l={},d=[{value:"Considered Alternatives",id:"considered-alternatives",level:2},{value:"Decision Outcome",id:"decision-outcome",level:2},{value:"Pros and Cons of the Alternatives",id:"pros-and-cons-of-the-alternatives",level:2},{value:"Do Nothing",id:"do-nothing",level:3},{value:"Use only <code>data-testid</code>",id:"use-only-data-testid",level:3},{value:"Use only <code>data-cy</code>",id:"use-only-data-cy",level:3}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"use-data-testid-as-an-attribute-for-finding-components-in-tests"},"Use ",(0,i.kt)("inlineCode",{parentName:"h1"},"data-testid")," as an attribute for finding components in tests"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://dp3.atlassian.net/browse/MB-3386"},"Jira Story"))),(0,i.kt)("p",null,"In front end code you can use a data tag selector, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"data-testid"),", on your components to make finding them in tests easier. Right now we're using two different values for test selector: ",(0,i.kt)("inlineCode",{parentName:"p"},"data-testid")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"data-cy"),". We should pick one, and then update them in the MilMove codebase so that usage is consistent."),(0,i.kt)("h2",{id:"considered-alternatives"},"Considered Alternatives"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Do nothing"),(0,i.kt)("li",{parentName:"ul"},"Use only ",(0,i.kt)("inlineCode",{parentName:"li"},"data-testid")),(0,i.kt)("li",{parentName:"ul"},"Use only ",(0,i.kt)("inlineCode",{parentName:"li"},"data-cy"))),(0,i.kt)("h2",{id:"decision-outcome"},"Decision Outcome"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Chosen Alternative: Use only ",(0,i.kt)("inlineCode",{parentName:"li"},"data-testid")),(0,i.kt)("li",{parentName:"ul"},"After discussing we all strongly favored consistency in the code."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"data-testid")," makes it clear that this is a test id, implying that it is used for testing; whereas ",(0,i.kt)("inlineCode",{parentName:"li"},"data-cy")," implies cypress, but we don't use cypress for all our tests and the suffix isn't clear to someone who isn't familiar with cypress.")),(0,i.kt)("h2",{id:"pros-and-cons-of-the-alternatives"},"Pros and Cons of the Alternatives"),(0,i.kt)("h3",{id:"do-nothing"},"Do Nothing"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"+")," Easy"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-")," Unclear which tag to use for tests"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-")," Unclear what ",(0,i.kt)("inlineCode",{parentName:"li"},"data-cy")," is if not familiar with cypress")),(0,i.kt)("h3",{id:"use-only-data-testid"},"Use only ",(0,i.kt)("inlineCode",{parentName:"h3"},"data-testid")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"+")," Consistent"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"+")," Name clearly indicates purpose"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-")," Have to change all references")),(0,i.kt)("h3",{id:"use-only-data-cy"},"Use only ",(0,i.kt)("inlineCode",{parentName:"h3"},"data-cy")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"+")," Consistent"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-")," Name is unclear as to purpose"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-")," Have to change all references")))}p.isMDXComponent=!0}}]);