"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[9548],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var u=2;u<l;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4681:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var o=n(7462),r=n(3366),l=(n(7294),n(3905)),a=["components"],i={},s="How To Run Against S3 & CDN Locally",u={unversionedId:"old-wiki/run-against-s3-locally",id:"old-wiki/run-against-s3-locally",isDocsHomePage:!1,title:"How To Run Against S3 & CDN Locally",description:"The app defaults to using the local filesystem to store uploaded files in development mode. This is to simplify development setup and",source:"@site/docs/old-wiki/run-against-s3-locally.md",sourceDirName:"old-wiki",slug:"/old-wiki/run-against-s3-locally",permalink:"/docs/old-wiki/run-against-s3-locally",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/old-wiki/run-against-s3-locally.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to Run Acceptance Tests",permalink:"/docs/old-wiki/run-acceptance-tests"},next:{title:"How To Run End to End (Cypress) Tests",permalink:"/docs/old-wiki/run-e2e-tests"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Upload Files to S3",id:"upload-files-to-s3",children:[{value:"Using the DevLocal Bucket",id:"using-the-devlocal-bucket",children:[]},{value:"Upload Files to S3 but serve from CDN",id:"upload-files-to-s3-but-serve-from-cdn",children:[]},{value:"Listing Files on S3",id:"listing-files-on-s3",children:[]},{value:"Cleaning up S3",id:"cleaning-up-s3",children:[]}]}],p={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,l.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"how-to-run-against-s3--cdn-locally"},"How To Run Against S3 & CDN Locally"),(0,l.kt)("p",null,"The app defaults to using the local filesystem to store uploaded files in development mode. This is to simplify development setup and\nmake it easy to inspect uploaded files while developing features. In some situations, though, it is desirable to instead have\nuploaded files stored on the real S3 service and served either by S3 directly or through a CDN like cloudfront."),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"You need to have followed ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/transcom/transcom-infrasec-com/tree/master/transcom-ppp"},"the instructions to setup your AWS developer credentials")," in order for the following commands to work."),(0,l.kt)("h2",{id:"upload-files-to-s3"},"Upload Files to S3"),(0,l.kt)("p",null,"The environment variable ",(0,l.kt)("inlineCode",{parentName:"p"},"STORAGE_BACKEND")," specifies if files should be stored on ",(0,l.kt)("inlineCode",{parentName:"p"},"s3"),", on s3 but using ",(0,l.kt)("inlineCode",{parentName:"p"},"cdn"),", on the ",(0,l.kt)("inlineCode",{parentName:"p"},"local")," filesystem, or in ",(0,l.kt)("inlineCode",{parentName:"p"},"memory"),". The default value is ",(0,l.kt)("inlineCode",{parentName:"p"},"local")," in development and ",(0,l.kt)("inlineCode",{parentName:"p"},"s3")," when the app is running in any deployed environment."),(0,l.kt)("h3",{id:"using-the-devlocal-bucket"},"Using the DevLocal Bucket"),(0,l.kt)("p",null,"Assuming your AWS credentials are setup properly, this command will configure the app to upload to the ",(0,l.kt)("inlineCode",{parentName:"p"},"transcom-ppp-app-devlocal-us-west-2")," S3 bucket:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"$ env STORAGE_BACKEND=s3 make server_run_standalone\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Please note that this does not use our usual setup to automatically reload changes to files in the ",(0,l.kt)("inlineCode",{parentName:"em"},"swagger")," directory. Other code changes should still be detected, however.")),(0,l.kt)("h3",{id:"upload-files-to-s3-but-serve-from-cdn"},"Upload Files to S3 but serve from CDN"),(0,l.kt)("p",null,"Instead of serving files from S3 bucket you can also use the CDN. Your files still upload to S3 but get served from CDN as a signed ",(0,l.kt)("a",{parentName:"p",href:"https://assets.devlocal.move.mil/your-user/user/xxxxxx-xxx-xxx-xxx"},"URL")," instead of S3 bucket ","[URL]",". To use CDN:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"}," env STORAGE_BACKEND=cdn make server_run_standalone\n")),(0,l.kt)("h3",{id:"listing-files-on-s3"},"Listing Files on S3"),(0,l.kt)("p",null,"If you want to see what files have been uploaded to an S3 bucket through the console, use ",(0,l.kt)("inlineCode",{parentName:"p"},"aws s3 ls"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# list all files uploaded to the devlocal bucket by you\n$ aws s3 ls --recursive s3://transcom-ppp-app-devlocal-us-west-2/$AWS_S3_KEY_NAMESPACE\n\n# You can set $AWS_S3_KEY_NAMESPACE in .envrc.local, but it will default\n# to your local username\n$ aws s3 ls --recursive s3://transcom-ppp-app-devlocal-us-west-2/bilbo\n")),(0,l.kt)("h3",{id:"cleaning-up-s3"},"Cleaning up S3"),(0,l.kt)("p",null,"When you are done testing, remove any uploaded objects from the S3 bucket using the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ aws s3 rm --recursive s3://transcom-ppp-app-devlocal-us-west-2/$AWS_S3_KEY_NAMESPACE\n")),(0,l.kt)("p",null,"This will delete all files from the ",(0,l.kt)("inlineCode",{parentName:"p"},"dev-local")," bucket that were uploaded by you. Use the above listing command to verify that this worked."))}d.isMDXComponent=!0}}]);