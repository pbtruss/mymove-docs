"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[9842],{98995:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));a(29420);const l={},o=void 0,r={unversionedId:"about/Welcome",id:"about/Welcome",title:"Welcome",description:"This is the migrated root README from the Transcom mymove repo. This is a living document that is being worked on.",source:"@site/docs/about/Welcome.md",sourceDirName:"about",slug:"/about/Welcome",permalink:"/mymove-docs/docs/about/Welcome",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/about/Welcome.md",tags:[],version:"current",frontMatter:{},sidebar:"aboutSidebar",previous:{title:"DMDC Identity Web Services",permalink:"/mymove-docs/docs/about/security/dmdc-identity-web-services"},next:{title:"How to Create & Submit a Pull Request (PR)",permalink:"/mymove-docs/docs/about/how-to-create-and-submit-PR"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Login.gov",id:"logingov",level:2},{value:"Creating alternative users with the same email address",id:"creating-alternative-users-with-the-same-email-address",level:3},{value:"Project Layout",id:"project-layout",level:2},{value:"Application Setup",id:"application-setup",level:2},{value:"Setup: Base Setup",id:"setup-base-setup",level:3},{value:"Homebrew",id:"homebrew",level:4},{value:"Setup: Git",id:"setup-git",level:4},{value:"Setup: Project Checkout",id:"setup-project-checkout",level:4},{value:"Setup: Editor Config",id:"setup-editor-config",level:4},{value:"Setup: Nix",id:"setup-nix",level:3},{value:"Nix: Initial Setup",id:"nix-initial-setup",level:4},{value:"Nix: Clean Up Local Env",id:"nix-clean-up-local-env",level:4},{value:"Nix: Installing Dependencies",id:"nix-installing-dependencies",level:4},{value:"Nix: Add Or Update Packages",id:"nix-add-or-update-packages",level:4},{value:"Setup: Manual",id:"setup-manual",level:3},{value:"Manual: Prerequisites",id:"manual-prerequisites",level:4},{value:"Setup: Shared",id:"setup-shared",level:3},{value:"Setup: AWS Services",id:"setup-aws-services",level:4},{value:"Setup: Direnv",id:"setup-direnv",level:4},{value:"Helpful variables for <code>.envrc.local</code>",id:"helpful-variables-for-envrclocal",level:5},{value:"Troubleshooting direnv &amp; chamber",id:"troubleshooting-direnv--chamber",level:5},{value:"Setup: Run the app",id:"setup-run-the-app",level:4},{value:"Setup: Dependencies",id:"setup-dependencies",level:4},{value:"Setup: Pre-Commit",id:"setup-pre-commit",level:5},{value:"Pre-Commit Troubleshooting (Manual): Process hanging on install hooks",id:"pre-commit-troubleshooting-manual-process-hanging-on-install-hooks",level:6},{value:"Pre-Commit Troubleshooting (Nix): SSL: CERTIFICATE VERIFY FAILED",id:"pre-commit-troubleshooting-nix-ssl-certificate-verify-failed",level:6},{value:"Setup: Database",id:"setup-database",level:5},{value:"Setup: Server",id:"setup-server",level:5},{value:"Server Dependencies",id:"server-dependencies",level:6},{value:"Setup: MilMove Local Client",id:"setup-milmove-local-client",level:5},{value:"Other Possible Setups",id:"other-possible-setups",level:3},{value:"Setup: Office Local client",id:"setup-office-local-client",level:4},{value:"Setup: Admin Local client",id:"setup-admin-local-client",level:4},{value:"Setup: Orders Gateway",id:"setup-orders-gateway",level:4},{value:"Setup: Prime API",id:"setup-prime-api",level:4},{value:"Development",id:"development",level:2},{value:"Makefile",id:"makefile",level:3},{value:"TSP Award Queue",id:"tsp-award-queue",level:3},{value:"Test Data Generator",id:"test-data-generator",level:3},{value:"API / Swagger",id:"api--swagger",level:3},{value:"Testing",id:"testing",level:3},{value:"Troubleshooting tips -- integration / e2e tests",id:"troubleshooting-tips----integration--e2e-tests",level:4},{value:"Logging",id:"logging",level:3},{value:"Log files",id:"log-files",level:4},{value:"Database",id:"database",level:3},{value:"Dev DB Commands",id:"dev-db-commands",level:4},{value:"Test DB Commands",id:"test-db-commands",level:4},{value:"Migrations",id:"migrations",level:4},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Documentation",id:"documentation",level:3},{value:"GoLand",id:"goland",level:3},{value:"Goland: Nix",id:"goland-nix",level:4},{value:"Storybook",id:"storybook",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Postgres Issues",id:"postgres-issues",level:4},{value:"Development Machine Timezone Issues",id:"development-machine-timezone-issues",level:4},{value:"Linters &amp; Pre-commit Hooks",id:"linters--pre-commit-hooks",level:4},{value:"Manual Redeploys and Other Helpful Information in an Emergency",id:"manual-redeploys-and-other-helpful-information-in-an-emergency",level:3},{value:"PII Best Practices",id:"pii-best-practices",level:3},{value:"More about content dispositions",id:"more-about-content-dispositions",level:4},{value:"More about browser settings",id:"more-about-browser-settings",level:4}],u={toc:p};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This is the migrated root README from the Transcom mymove repo. This is a living document that is being worked on.")),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Please check the ",(0,i.kt)("a",{parentName:"p",href:"https://transcom.github.io/mymove-docs/docs"},"MilMove Development Documentation")," for details on the project itself."),(0,i.kt)("h2",{id:"logingov"},"Login.gov"),(0,i.kt)("p",null,"You'll need accounts for login.gov and the login.gov sandbox. These will\nrequire two-factor authentication, so have your second factor (one of: phone,\nauthentication app, security key, CAC) on hand. To create an account at\nlogin.gov, use your regular ",(0,i.kt)("inlineCode",{parentName:"p"},"truss.works")," email and follow ",(0,i.kt)("a",{parentName:"p",href:"https://login.gov/help/creating-an-account/how-to-create-an-account/"},"the official\ninstructions"),".\nTo create an account in the sandbox, follow the same instructions, but ",(0,i.kt)("a",{parentName:"p",href:"https://idp.int.identitysandbox.gov/sign_up/enter_email"},"in the\nsandbox server"),". Do\n",(0,i.kt)("em",{parentName:"p"},"not")," use your regular email address in the sandbox."),(0,i.kt)("h3",{id:"creating-alternative-users-with-the-same-email-address"},"Creating alternative users with the same email address"),(0,i.kt)("p",null,"You can use the plus sign ",(0,i.kt)("inlineCode",{parentName:"p"},"+")," to create a new Truss email address.\n",(0,i.kt)("inlineCode",{parentName:"p"},"name+some_string@truss.works")," will be treated as a new address, but will be\nrouted to your ",(0,i.kt)("inlineCode",{parentName:"p"},"name@truss.works")," email automatically. Don't use this for the\noffice-side of account creation. It's helpful to use these types of accounts for\nthe customer-side accounts."),(0,i.kt)("h2",{id:"project-layout"},"Project Layout"),(0,i.kt)("p",null,"All of our code is intermingled in the top level directory of ",(0,i.kt)("inlineCode",{parentName:"p"},"mymove"),". Here is an explanation of what some of these\ndirectories contain:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".circleci"),": Directory for CircleCI CI/CD configuration"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bin"),": A location for tools compiled from the ",(0,i.kt)("inlineCode",{parentName:"li"},"cmd")," directory"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"build"),": The build output directory for the client. This is what the development server serves"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cmd"),": The location of main packages for any go binaries we build"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"config"),": Config files for the database and AWS ECS. Also certificates."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cypress"),": The integration test files for the ",(0,i.kt)("a",{parentName:"li",href:"https://www.cypress.io/"},"Cypress tool")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"docs"),": A location for docs for the project. This is where ADRs are"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"internal"),": Generated code for duty station loader"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"migrations"),": Database migrations, see ","[./migrations/README.md]"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"node_modules"),": Cached javascript dependencies for the client"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pkg"),": The location of all of our go code for the server and various tools"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"public"),": The client's static resources"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scripts"),": A location for tools helpful for developing this project"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"src"),": The react source code for the client"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"swagger"),": The swagger definition files for each of our APIs")),(0,i.kt)("h2",{id:"application-setup"},"Application Setup"),(0,i.kt)("p",null,"Note: These instructions are a living document and often fall out-of-date.\nIf you run into anything that needs correcting or updating, please create\na PR with those changes to help those coming after you."),(0,i.kt)("p",null,"There are two main ways we have for setting up local development:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Using ",(0,i.kt)("inlineCode",{parentName:"li"},"nix")," with a bit of ",(0,i.kt)("inlineCode",{parentName:"li"},"homebrew")),(0,i.kt)("li",{parentName:"ul"},"Using primarily only ",(0,i.kt)("inlineCode",{parentName:"li"},"homebrew"))),(0,i.kt)("p",null,"Both need a bit of base setup before, but then you can follow whichever path you prefer after that. There are also a few parts that may be shared between both setups."),(0,i.kt)("h3",{id:"setup-base-setup"},"Setup: Base Setup"),(0,i.kt)("p",null,"There are a number of things you'll need at a minimum to be able to work with this project."),(0,i.kt)("h4",{id:"homebrew"},"Homebrew"),(0,i.kt)("p",null,"We use ",(0,i.kt)("a",{parentName:"p",href:"https://brew.sh"},"Homebrew")," to manage a few of the packages we need for this project."),(0,i.kt)("p",null,"Whether or not you already have Homebrew installed, you'll need to make sure it's\nup to date and ready to brew:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'SKIP_LOCAL=true /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/trussworks/fresh-brew/main/fresh-press)"\n')),(0,i.kt)("p",null,"If you're using the Fish shell, run this command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"SKIP_LOCAL=true bash (curl -fsSL https://raw.githubusercontent.com/trussworks/fresh-brew/main/fresh-press | psub)\n")),(0,i.kt)("p",null,"See the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/trussworks/fresh-brew"},"trussworks/fresh-brew repo"),"\nfor more information."),(0,i.kt)("h4",{id:"setup-git"},"Setup: Git"),(0,i.kt)("p",null,"Use your work email when making commits to our repositories. The simplest path to correctness is setting global config:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'git config --global user.email "trussel@truss.works"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'git config --global user.name "Trusty Trussel"\n')),(0,i.kt)("p",null,"If you drop the ",(0,i.kt)("inlineCode",{parentName:"p"},"--global")," flag these settings will only apply to the current repo. If you ever re-clone that repo or\nclone another repo, you will need to remember to set the local config again. You won't. Use the global config. :-)"),(0,i.kt)("p",null,'For web-based Git operations, GitHub will use your primary email unless you choose "Keep my email address private".\nIf you don\'t want to set your work address as primary, please\n',(0,i.kt)("a",{parentName:"p",href:"https://github.com/settings/emails"},"turn on the privacy setting"),"."),(0,i.kt)("p",null,"Note if you want use HTTPS instead of SSH for working with git, since we want 2-factor-authentication enabled, you need\nto ",(0,i.kt)("a",{parentName:"p",href:"https://gist.github.com/ateucher/4634038875263d10fb4817e5ad3d332f"},"create a personal access token")," and use that as\nyour password."),(0,i.kt)("h4",{id:"setup-project-checkout"},"Setup: Project Checkout"),(0,i.kt)("p",null,"You can checkout this repository by running"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:transcom/mymove.git\n")),(0,i.kt)("p",null,"Please check out the code in a directory like ",(0,i.kt)("inlineCode",{parentName:"p"},"~/Projects/mymove"),". You can check the code out anywhere EXCEPT inside your ",(0,i.kt)("inlineCode",{parentName:"p"},"$GOPATH"),". As an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p ~/Projects && cd ~/Projects\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:transcom/mymove.git\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cd mymove\n")),(0,i.kt)("p",null,"You will then find the code at ",(0,i.kt)("inlineCode",{parentName:"p"},"~/Projects/mymove"),"."),(0,i.kt)("h4",{id:"setup-editor-config"},"Setup: Editor Config"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://editorconfig.org/"},"EditorConfig")," allows us to manage editor configuration (like indent sizes) with a\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/transcom/ppp/blob/main/.editorconfig"},"file")," in the repo. Install the appropriate plugin in your\neditor to take advantage of that if you wish."),(0,i.kt)("h3",{id:"setup-nix"},"Setup: Nix"),(0,i.kt)("p",null,"If you need help with this setup, you can ask for help in the\n",(0,i.kt)("a",{parentName:"p",href:"https://trussworks.slack.com/archives/C01KTH6HP7D"},"Truss slack #code-nix channel"),"."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#nix-initial-setup"},"Initial Setup")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#nix-clean-up-local-env"},"Clean Up Local Env")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#nix-installing-dependencies"},"Install Dependencies")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#nix-add-or-update-packages"},"Add or Update Packages")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#setup-run-the-app"},"Run the app"))),(0,i.kt)("h4",{id:"nix-initial-setup"},"Nix: Initial Setup"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"First read the overview in the\n",(0,i.kt)("a",{parentName:"li",href:"https://github.com/trussworks/Engineering-Playbook/tree/main/developing/nix"},"Truss Engineering Playbook"),"."),(0,i.kt)("li",{parentName:"ol"},"Follow the installation instructions in the playbook.")),(0,i.kt)("h4",{id:"nix-clean-up-local-env"},"Nix: Clean Up Local Env"),(0,i.kt)("p",null,"This section is only if you had previously set up any of these tools/packages. It is also optional, with the following\nthe caveat of this note:"),(0,i.kt)("p",null,"\u26a0\ufe0f NOTE: If you need any of the packages/tools for other things that you won't use ",(0,i.kt)("inlineCode",{parentName:"p"},"nix")," for, you can set things\nup so that they both work side by side, but you'll just have to set up your ",(0,i.kt)("inlineCode",{parentName:"p"},"PATH")," properly. And even then, there may be\nother steps necessary which aren't documented here."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Disable or uninstall ",(0,i.kt)("inlineCode",{parentName:"p"},"nodenv"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"asdf")," or any other version switchers for ",(0,i.kt)("inlineCode",{parentName:"p"},"mymove"),"."),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"nodenv"),":"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"TLDR (disable only): remove ",(0,i.kt)("inlineCode",{parentName:"li"},'eval "$(nodenv init -)"')," from ",(0,i.kt)("inlineCode",{parentName:"li"},".zshrc")," (or your shell's config file)"),(0,i.kt)("li",{parentName:"ol"},"Full instructions: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/nodenv/nodenv#uninstalling-nodenv"},"Uninstalling nodenv")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"asdf"),":"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"See ",(0,i.kt)("a",{parentName:"p",href:"https://asdf-vm.com/#/core-manage-asdf?id=remove"},"Remove asdf"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Remove setting of ",(0,i.kt)("inlineCode",{parentName:"p"},"GOPATH")," and putting ",(0,i.kt)("inlineCode",{parentName:"p"},"GOPATH")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"PATH")," in ",(0,i.kt)("inlineCode",{parentName:"p"},".zshrc")," (or your shell's config file). Looks\nsomething like this:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"export GOPATH=~/dev/go\nexport PATH=$(go env GOPATH)/bin:$PATH\n")))))))),(0,i.kt)("h4",{id:"nix-installing-dependencies"},"Nix: Installing Dependencies"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install a few MilMove dependencies:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"nix-env -i aws-vault chamber direnv bash\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"#setup-aws-services"},"Set up AWS services"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Configure direnv:"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#setup-direnv"},"Set up direnv")),(0,i.kt)("li",{parentName:"ol"},"In ",(0,i.kt)("inlineCode",{parentName:"li"},".zshrc")," (or the relevant one for you), the ",(0,i.kt)("inlineCode",{parentName:"li"},"nix")," setup line (inserted by the ",(0,i.kt)("inlineCode",{parentName:"li"},"nix")," installation) needs to run\nbefore the ",(0,i.kt)("inlineCode",{parentName:"li"},"direnv")," hook setup."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"./nix/update.sh")),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"NOTE: If the nix dependencies change, you should see a warning from direnv:")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},"direnv: WARNING: nix packages out of date. Run nix/update.sh\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make deps_nix\n")),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"This will install some things like ",(0,i.kt)("inlineCode",{parentName:"li"},"pre-commit")," hooks, ",(0,i.kt)("inlineCode",{parentName:"li"},"node_modules"),", etc. You can see\n",(0,i.kt)("a",{parentName:"li",href:"#setup-dependencies"},"Setup: Dependencies")," for more info on some of the parts.")))),(0,i.kt)("h4",{id:"nix-add-or-update-packages"},"Nix: Add Or Update Packages"),(0,i.kt)("p",null,"First, you need to find the package you are looking for."),(0,i.kt)("p",null,"Visit ",(0,i.kt)("a",{parentName:"p",href:"https://ahobson.github.io/nix-package-search/#/search"},"nix-package-search")),(0,i.kt)("p",null,"Search for a package, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"go-"),". The first time you search, it may be\nslow and take almost a minute to get results, but it will be faster\nafter that."),(0,i.kt)("p",null,"When you see the version of the package you want, click on the eye\nicon to unfold the settings."),(0,i.kt)("p",null,"Add or update the package to ",(0,i.kt)("inlineCode",{parentName:"p"},"nix/default.nix")),(0,i.kt)("h3",{id:"setup-manual"},"Setup: Manual"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#setup-aws-services"},"Set up AWS services")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#manual-prerequisites"},"Prerequisites")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#setup-direnv"},"Set up direnv")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#setup-run-the-app"},"Run the app"))),(0,i.kt)("h4",{id:"manual-prerequisites"},"Manual: Prerequisites"),(0,i.kt)("p",null,"We have scripts that will install all the dependencies for you, as well as configure your shell file with all the required commands:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"SKIP_CHECKS=true make prereqs\n")),(0,i.kt)("p",null,"This will install everything listed in ",(0,i.kt)("inlineCode",{parentName:"p"},"Brewfile.local"),", as well as Docker."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": The script might ask you for your macOS password at certain points, like when installing opensc, or when it needs to write to your ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/hosts")," file."),(0,i.kt)("p",null,"Once this script is finished, quit and restart your terminal, then complete the\ninstallation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make deps\n")),(0,i.kt)("p",null,"This will install ",(0,i.kt)("inlineCode",{parentName:"p"},"pre-commit")," hooks and frontend client dependencies. See ",(0,i.kt)("a",{parentName:"p",href:"#setup-dependencies"},"Setup: Dependencies")," for more info."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note that installing and configuring pre-commit the first time takes about 3 minutes.")),(0,i.kt)("p",null,"Going forward, feel free to run ",(0,i.kt)("inlineCode",{parentName:"p"},"make prereqs")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"make deps")," as often as you'd like to keep your system up to date. Whenever we update the app to a newer version of Go or Node, all you have to run is ",(0,i.kt)("inlineCode",{parentName:"p"},"make prereqs")," and it will update everything for you."),(0,i.kt)("h3",{id:"setup-shared"},"Setup: Shared"),(0,i.kt)("h4",{id:"setup-aws-services"},"Setup: AWS Services"),(0,i.kt)("p",null,"This project uses AWS services which means you'll need an account to work with parts of it. AWS credentials are managed\nvia ",(0,i.kt)("inlineCode",{parentName:"p"},"aws-vault"),". Once you have received AWS credentials (which are provided by the infrastructure team), you can follow\nthese instructions to\n",(0,i.kt)("a",{parentName:"p",href:"https://dp3.atlassian.net/wiki/spaces/MT/pages/1250066433/0029+AWS+Organization+Authentication"},"finish setting up AWS"),"."),(0,i.kt)("h4",{id:"setup-direnv"},"Setup: Direnv"),(0,i.kt)("p",null,"For managing local environment variables, we're using ",(0,i.kt)("a",{parentName:"p",href:"https://direnv.net/"},"direnv"),"."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"direnv allow\n")),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"This will load up the ",(0,i.kt)("inlineCode",{parentName:"li"},".envrc")," file. It should complain that you have missing variables. We'll fix that next.")))),(0,i.kt)("p",null,"To fix the missing variables issue, you can do one of the following things:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Let ",(0,i.kt)("inlineCode",{parentName:"p"},"direnv")," get secret values with ",(0,i.kt)("inlineCode",{parentName:"p"},"chamber"),". To enable this, run:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cp .envrc.chamber.template .envrc.chamber\n")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Note")," that this method does not work for users of the ",(0,i.kt)("inlineCode",{parentName:"p"},"fish")," shell unless you replace ",(0,i.kt)("inlineCode",{parentName:"p"},"direnv allow")," with"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"direnv export fish | source\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Note also")," if you have a very poor internet connection, this method may be\nproblematic to you.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"An alternative is to add a ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc.local")," file. Then run:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"DISABLE_AWS_VAULT_WRAPPER=1 AWS_REGION=us-gov-west-1 aws-vault exec transcom-gov-dev -- chamber env app-devlocal >> .envrc.local\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If you don't have access to ",(0,i.kt)("inlineCode",{parentName:"p"},"chamber"),", you can also run"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"touch .envrc.local\n")),(0,i.kt)("p",{parentName:"li"},"then add any values that the output from ",(0,i.kt)("inlineCode",{parentName:"p"},"direnv")," asks you to define."))),(0,i.kt)("h5",{id:"helpful-variables-for-envrclocal"},"Helpful variables for ",(0,i.kt)("inlineCode",{parentName:"h5"},".envrc.local")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Increase concurrency of ",(0,i.kt)("inlineCode",{parentName:"p"},"golangci-lint"),"; defaults to 6 on dev machines and to 1 in CircleCI."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"export GOLANGCI_LINT_CONCURRENCY=8\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Enable go code debugging in goland"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"export GOLAND=1\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Silence SQL logs locally; we default this to be true in ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"export DB_DEBUG=0\n")))),(0,i.kt)("h5",{id:"troubleshooting-direnv--chamber"},"Troubleshooting direnv & chamber"),(0,i.kt)("p",null,"Make sure you have the latest version of Chamber that supports the ",(0,i.kt)("inlineCode",{parentName:"p"},"env")," command\noption. You may run into the following error if the version of Chamber you have\ninstalled does not support ",(0,i.kt)("inlineCode",{parentName:"p"},"env"),". The error presents itself because of the\n",(0,i.kt)("inlineCode",{parentName:"p"},"chamber")," commands that ",(0,i.kt)("inlineCode",{parentName:"p"},"direnv")," runs as part of the ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc.*")," files shown\nabove."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'>_ cd mymove\ndirenv: loading .envrc.chamber\nError: unknown command "env" for "chamber"\nRun \'chamber --help\' for usage.\n')),(0,i.kt)("h4",{id:"setup-run-the-app"},"Setup: Run the app"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"If this is your very first time setting up this project, you'll need to launch Docker first, follow the prompts to allow macOS to open it, and agree to Docker's terms of service.")),(0,i.kt)("p",null,"You might also need to launch Docker if you restarted your computer and you configured Docker to not automatically launch after a restart."),(0,i.kt)("p",null,"Once Docker is up and running, the following commands will get ",(0,i.kt)("inlineCode",{parentName:"p"},"mymove")," running on your machine."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run the backend server"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run\n")),(0,i.kt)("p",{parentName:"li"},"This command also ensures the database is up and running and that the\nlatest migrations are applied. See ",(0,i.kt)("a",{parentName:"p",href:"#setup-database"},"Setup: Database")," and\n",(0,i.kt)("a",{parentName:"p",href:"#setup-server"},"Setup: Server")," for more details.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run the frontend client ",(0,i.kt)("strong",{parentName:"p"},"in a separate terminal tab")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make client_run\n")),(0,i.kt)("p",{parentName:"li"},"This will ensure the frontend dependencies are installed and will\nautomatically launch the browser and open the app at milmovelocal:3000.\nSee ",(0,i.kt)("a",{parentName:"p",href:"#setup-milmove-local-client"},"Setup: MilMove Local Client")," for more details."))),(0,i.kt)("h4",{id:"setup-dependencies"},"Setup: Dependencies"),(0,i.kt)("p",null,"This step will check your system for any setup issues. Then it will ensure that you have installed ",(0,i.kt)("inlineCode",{parentName:"p"},"pre-commit"),"\nand go on to install the client (javascript) and server (golang) dependencies for you. If you are interested in\nmore details, you can look at the sections under this one, but it's not required."),(0,i.kt)("h5",{id:"setup-pre-commit"},"Setup: Pre-Commit"),(0,i.kt)("p",null,"Part of the ",(0,i.kt)("inlineCode",{parentName:"p"},"pre-commit")," setup run by the ",(0,i.kt)("inlineCode",{parentName:"p"},"make deps")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"make deps_nix")," commands.\nThey in turn run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit install\n")),(0,i.kt)("p",null,"to install a pre-commit hook into ",(0,i.kt)("inlineCode",{parentName:"p"},"./git/hooks/pre-commit"),". This must be done so\nthat the hook will check files you are about to commit to the repository."),(0,i.kt)("p",null,"Next it installs the ",(0,i.kt)("inlineCode",{parentName:"p"},"pre-commit")," hook libraries with"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit install-hooks\n")),(0,i.kt)("p",null,"If you ever want to run the ",(0,i.kt)("inlineCode",{parentName:"p"},"pre-commit")," hooks for all files, you can run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit run -a\n")),(0,i.kt)("p",null,"though before you can do that, you'll need to have installed the ",(0,i.kt)("inlineCode",{parentName:"p"},"javascript")," dependencies and generated some ",(0,i.kt)("inlineCode",{parentName:"p"},"golang"),"\ncode from Swagger files. Once you've finished setting up your project locally, you should be good to go. If you want\nto skip ahead and be able to run ",(0,i.kt)("inlineCode",{parentName:"p"},"pre-commit")," checks since now, you can run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make pre_commit_tests\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make server_generate client_deps && pre-commit run -a\n")),(0,i.kt)("h6",{id:"pre-commit-troubleshooting-manual-process-hanging-on-install-hooks"},"Pre-Commit Troubleshooting (Manual): Process hanging on install hooks"),(0,i.kt)("p",null,"If any pre-commit commands (or ",(0,i.kt)("inlineCode",{parentName:"p"},"make deps"),") result in hanging or incomplete\ninstallation, remove the pre-commit cache and the ",(0,i.kt)("inlineCode",{parentName:"p"},".client_deps.stamp")," and try again:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"rm -rf ~/.cache/pre-commit\nrm .client_deps.stamp\n")),(0,i.kt)("h6",{id:"pre-commit-troubleshooting-nix-ssl-certificate-verify-failed"},"Pre-Commit Troubleshooting (Nix): SSL: CERTIFICATE VERIFY FAILED"),(0,i.kt)("p",null,"This can happen because of the way certs need to be handled in this project and ",(0,i.kt)("inlineCode",{parentName:"p"},"nix"),". To get around this issue, you\ncan try running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"NIX_SSL_CERT_FILE=$HOME/.nix-profile/etc/ssl/certs/ca-bundle.crt <pre-commit related command>\n")),(0,i.kt)("p",null,"E.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"NIX_SSL_CERT_FILE=$HOME/.nix-profile/etc/ssl/certs/ca-bundle.crt pre-commit install-hooks\n")),(0,i.kt)("h5",{id:"setup-database"},"Setup: Database"),(0,i.kt)("p",null,"You will need to setup a local database before you can begin working on the local server / client. Docker will need to\nbe running for any of this to work."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Creates a PostgreSQL docker container for dev, if it doesn't exist already, and starts/runs it."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make db_dev_run\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Runs all existing database migrations for dev database, which does things like creating table structures, etc.\nYou will run this command again anytime you add new migrations to the app (see below for more)."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make db_dev_migrate\n")))),(0,i.kt)("p",null,"You can validate that your dev database is running by running"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"psql-dev\n")),(0,i.kt)("p",null,"This puts you in a PostgreSQL shell. To show all the tables, type"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\\dt\n")),(0,i.kt)("p",null,"If you want to exit out of the PostgreSQL shell, type"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\\q\n")),(0,i.kt)("p",null,"If you are stuck on this step you may need to see the section on Troubleshooting."),(0,i.kt)("h5",{id:"setup-server"},"Setup: Server"),(0,i.kt)("p",null,"This step installs dependencies, then builds and runs the server using ",(0,i.kt)("inlineCode",{parentName:"p"},"gin"),", which is a hot reloading go server.\nIt will listen on port ",(0,i.kt)("inlineCode",{parentName:"p"},"8080")," and will rebuild the actual server any time a go file changes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run\n")),(0,i.kt)("p",null,"To have hot reloading of the entire application (at least for the customer side), pair the above with"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make client_run\n")),(0,i.kt)("p",null,"In rare cases, you may want to run the server standalone, in which case you can run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run_standalone\n")),(0,i.kt)("p",null,"This will build both the client and the server and this invocation can be relied upon to be serving the client JS on\nits own rather than relying on webpack doing so. You can run this without running ",(0,i.kt)("inlineCode",{parentName:"p"},"make client_run")," and the whole app\nshould work."),(0,i.kt)("h6",{id:"server-dependencies"},"Server Dependencies"),(0,i.kt)("p",null,"Dependencies are managed by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/golang/go/wiki/Modules"},"go modules"),". New dependencies are automatically\ndetected in import statements and added to ",(0,i.kt)("inlineCode",{parentName:"p"},"go.mod")," when you run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"go build\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"go run\n")),(0,i.kt)("p",null,"You can also manually edit ",(0,i.kt)("inlineCode",{parentName:"p"},"go.mod")," as needed."),(0,i.kt)("p",null,"If you need to add a Go-based tool dependency that is otherwise not imported by our code, import it in\n",(0,i.kt)("inlineCode",{parentName:"p"},"pkg/tools/tools.go"),"."),(0,i.kt)("p",null,"After importing ",(0,i.kt)("em",{parentName:"p"},"any")," go dependency it's a good practice to run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"go mod tidy\n")),(0,i.kt)("p",null,"which prunes unused dependencies and calculates dependency requirements for all possible system architectures."),(0,i.kt)("h5",{id:"setup-milmove-local-client"},"Setup: MilMove Local Client"),(0,i.kt)("p",null,"Commands in this section:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make client_build\n")),(0,i.kt)("p",null,"and"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make client_run\n")),(0,i.kt)("p",null,"These will start the webpack dev server, serving the frontend on port 3000. If paired with"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run\n")),(0,i.kt)("p",null,"then the whole app will work, the webpack dev server proxies all API calls through to the server."),(0,i.kt)("p",null,"If both the server and client are running, you should be able to view the Swagger UI at\n",(0,i.kt)("a",{parentName:"p",href:"http://milmovelocal:3000/swagger-ui/internal.html"},"http://milmovelocal:3000/swagger-ui/internal.html"),". If it does not, try running"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make client_build\n")),(0,i.kt)("p",null,"(this only needs to be run the first time)."),(0,i.kt)("p",null,"Dependencies are managed by ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn"),". To add a new dependency, use"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add\n")),(0,i.kt)("h3",{id:"other-possible-setups"},"Other Possible Setups"),(0,i.kt)("p",null,"The instructions so far have been for getting the project up and running, but focused on the client/customer side.\nThere are more things you can set up in the following sections."),(0,i.kt)("h4",{id:"setup-office-local-client"},"Setup: Office Local client"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Ensure that you have a test account which can log into the office site. To load test data, run:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make db_dev_e2e_populate\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make office_client_run\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},'Log into "Local Sign In" and either select a pre-made user or use the button to create a new user'))),(0,i.kt)("h4",{id:"setup-admin-local-client"},"Setup: Admin Local client"),(0,i.kt)("p",null,"Run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make admin_client_run\n")),(0,i.kt)("h4",{id:"setup-orders-gateway"},"Setup: Orders Gateway"),(0,i.kt)("p",null,"Nothing to do."),(0,i.kt)("h4",{id:"setup-prime-api"},"Setup: Prime API"),(0,i.kt)("p",null,"The API that the Prime will use is authenticated via mutual TSL so there are a few things you need to do to interact\nwith it in a local environment."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Make sure that the ",(0,i.kt)("inlineCode",{parentName:"p"},"primelocal")," alias is setup for localhost"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Check your ",(0,i.kt)("inlineCode",{parentName:"li"},"/etc/hosts")," file for an entry for ",(0,i.kt)("inlineCode",{parentName:"li"},"primelocal"),"."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Access the Prime API using the devlocal-mtls certs. There is a script that shows you how to do this with curl\nat ",(0,i.kt)("inlineCode",{parentName:"p"},"./scripts/prime-api"),". For instance to call the ",(0,i.kt)("inlineCode",{parentName:"p"},"move-task-orders")," endpoint, run"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./scripts/prime-api move-task-orders\n")))),(0,i.kt)("h2",{id:"development"},"Development"),(0,i.kt)("h3",{id:"makefile"},"Makefile"),(0,i.kt)("p",null,"The primary way to interact with the project is via the ",(0,i.kt)("inlineCode",{parentName:"p"},"Makefile"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"Makefile")," contains a number of handy\ntargets (you can think of these as commands) that make interacting with the project easier. Each target manages\nits own dependencies so that you don't have to. This is how you'll do common tasks like build the project, run\nthe server and client, and manage the database."),(0,i.kt)("p",null,"The fastest way to get familiar with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Makefile")," is to use the command ",(0,i.kt)("inlineCode",{parentName:"p"},"make help"),". You can also type ",(0,i.kt)("inlineCode",{parentName:"p"},"make"),"\nand it will default to calling ",(0,i.kt)("inlineCode",{parentName:"p"},"make help")," target on your behalf. The ",(0,i.kt)("inlineCode",{parentName:"p"},"Makefile")," is important to this project\nso take the time to understand what it does."),(0,i.kt)("h3",{id:"tsp-award-queue"},"TSP Award Queue"),(0,i.kt)("p",null,"This background job is built as a separate binary which can be built using ",(0,i.kt)("inlineCode",{parentName:"p"},"make tsp_run"),"."),(0,i.kt)("h3",{id:"test-data-generator"},"Test Data Generator"),(0,i.kt)("p",null,"When creating new features, it is helpful to have sample data for the feature to interact with. The TSP Award Queue is an example of that--it matches shipments to TSPs, and it's hard to tell if it's working without some shipments and TSPs in the database!"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make bin/generate-test-data")," will build the fake data generator binary"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'bin/generate-test-data --named-scenario="dev_seed"')," will populate the development database with a handful of users in various stages of progress along the flow. The emails are named accordingly (see ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/transcom/mymove/blob/main/pkg/testdatagen/scenario/devseed.go"},(0,i.kt)("inlineCode",{parentName:"a"},"devseed.go")),"). Alternatively, run ",(0,i.kt)("inlineCode",{parentName:"li"},"make db_dev_e2e_populate")," to reset your db and populate it."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bin/generate-test-data")," will run binary and create a preconfigured set of test data. To determine the data scenario you'd like to use, check out scenarios in the ",(0,i.kt)("inlineCode",{parentName:"li"},"testdatagen")," package. Each scenario contains a description of what data will be created when the scenario is run. Pass the scenario in as a flag to the generate-test-data function. A sample command: ",(0,i.kt)("inlineCode",{parentName:"li"},"./bin/generate-test-data --scenario=2"),".")),(0,i.kt)("p",null,"There is also a package (",(0,i.kt)("inlineCode",{parentName:"p"},"/pkg/testdatagen"),") that can be imported to create arbitrary test data. This could be used in tests, so as not to duplicate functionality."),(0,i.kt)("p",null,"Currently, scenarios have the following numbers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--scenario=1")," for Award Queue Scenario 1"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--scenario=2")," for Award Queue Scenario 2"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--scenario=3")," for Duty Station Scenario"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--scenario=4")," for PPM or PPM SIT Estimate Scenario (can also use Rate Engine Scenarios for Estimates)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--scenario=5")," for Rate Engine Scenario 1"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--scenario=6")," for Rate Engine Scenario 2"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--scenario=7")," for TSP test data")),(0,i.kt)("h3",{id:"api--swagger"},"API / Swagger"),(0,i.kt)("p",null,"Internal services (i.e. endpoints only intended for use by the React client) are\ndefined in ",(0,i.kt)("inlineCode",{parentName:"p"},"swagger-def/internal.yaml")," and served from the value of the\n",(0,i.kt)("inlineCode",{parentName:"p"},"basePath:")," stanza at the root of the generated ",(0,i.kt)("inlineCode",{parentName:"p"},"./swagger/internal.yaml")," file.\n",(0,i.kt)("strong",{parentName:"p"},"Internal endpoints are not intended for use by external clients"),"."),(0,i.kt)("p",null,"The Orders Gateway's API is defined in the file ",(0,i.kt)("inlineCode",{parentName:"p"},"swagger-def/orders.yaml")," and\nserved from the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"basePath:")," stanza at the root of the generated\n",(0,i.kt)("inlineCode",{parentName:"p"},"./swagger/orders.yaml")," file."),(0,i.kt)("p",null,"The Admin API is defined in the file ",(0,i.kt)("inlineCode",{parentName:"p"},"swagger-def/admin.yaml")," and served from\nthe value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"basePath:")," stanza at the root of the generated\n",(0,i.kt)("inlineCode",{parentName:"p"},"./swagger/admin.yaml")," file."),(0,i.kt)("p",null,"The Prime API is defined in the file ",(0,i.kt)("inlineCode",{parentName:"p"},"./swagger-def/prime.yaml")," and served from\nthe value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"basePath:")," stanza at the root of the generated\n",(0,i.kt)("inlineCode",{parentName:"p"},"./swagger/prime.yaml")," file."),(0,i.kt)("p",null,"You can view the documentation for the following APIs (powered by Swagger UI) at\nthe following URLS with a local client and server running:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"internal API: ",(0,i.kt)("a",{parentName:"li",href:"http://milmovelocal:3000/swagger-ui/internal.html"},"http://milmovelocal:3000/swagger-ui/internal.html")),(0,i.kt)("li",{parentName:"ul"},"admin API: ",(0,i.kt)("a",{parentName:"li",href:"http://milmovelocal:3000/swagger-ui/admin.html"},"http://milmovelocal:3000/swagger-ui/admin.html")),(0,i.kt)("li",{parentName:"ul"},"GHC API: ",(0,i.kt)("a",{parentName:"li",href:"http://milmovelocal:3000/swagger-ui/ghc.html"},"http://milmovelocal:3000/swagger-ui/ghc.html")),(0,i.kt)("li",{parentName:"ul"},"Prime API: ",(0,i.kt)("a",{parentName:"li",href:"http://primelocal:3000/swagger-ui/prime.html"},"http://primelocal:3000/swagger-ui/prime.html"))),(0,i.kt)("p",null,"For more information on ",(0,i.kt)("em",{parentName:"p"},"API / Swagger")," definitions, please review the README\ndocumentation found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"./swagger/README.md")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"./swagger-def/README.md"),"\nfiles."),(0,i.kt)("h3",{id:"testing"},"Testing"),(0,i.kt)("p",null,"There are a few handy targets in the Makefile to help you run tests:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make client_test"),": Run front-end testing suites."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make server_test"),": Run back-end testing suites. ",(0,i.kt)("a",{parentName:"li",href:"https://transcom.github.io/mymove-docs/docs/dev/testing/running-tests/run-go-tests"},"Additional info for running go tests")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make e2e_test"),": Run end-to-end testing suite. ",(0,i.kt)("a",{parentName:"li",href:"https://transcom.github.io/mymove-docs/docs/dev/testing/running-tests/run-e2e-tests"},"Additional info for running E2E tests"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Note: this will not necessarily reflect the same results as in the CI\nenvironment, run with caution. One is your ",(0,i.kt)("inlineCode",{parentName:"li"},".envrc")," is going to\npopulate your dev environment with a bunch of values that ",(0,i.kt)("inlineCode",{parentName:"li"},"make e2e_test_docker"),"\nwon't have."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make e2e_test_docker"),": Run e2e testing suite in the same docker container as is run in CircleCI.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Note: this runs with a full clean/rebuild, so it is not great for fast iteration.\nUse ",(0,i.kt)("inlineCode",{parentName:"li"},"make e2e_test")," to pick individual tests from the Cypress UI."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make test"),": Run e2e, client- and server-side testing suites."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn test:e2e"),": Useful for debugging. This opens the cypress test runner\nagainst your already running dev servers and inspect/run individual e2e tests.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Note: You must already have the servers running for this to work!")))),(0,i.kt)("h4",{id:"troubleshooting-tips----integration--e2e-tests"},"Troubleshooting tips -- integration / e2e tests"),(0,i.kt)("p",null,"When running locally, you may find that retries or successive runs have unexpected failures. Some of the integration tests are written with the assumption that they will only be run against a clean DB. If you're working with one of these and don't have time to fix them to properly set up and clean up their state, you can use this command to reset your local dev db before opening the test runner. Note that if you choose not to fix the offending test(s), you'll have to repeatedly close the test runner to re-clean the the DB. You won't be able to take advantage of Cypress's hot reloading!"),(0,i.kt)("p",null,"If you suspect memory issues, you can further inspect this with the commands:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn test:e2e-debug"),", which runs ",(0,i.kt)("inlineCode",{parentName:"li"},"yarn test:e2e")," with DEBUG stats"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn test:e2e-debug-clean"),", which runs ",(0,i.kt)("inlineCode",{parentName:"li"},"yarn test:e2e-clean")," with DEBUG stats")),(0,i.kt)("h3",{id:"logging"},"Logging"),(0,i.kt)("p",null,"We are using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/uber-go/zap"},"zap")," as a logger in this project. We currently rely on its built-in ",(0,i.kt)("inlineCode",{parentName:"p"},"NewDevelopment()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"NewProduction()")," default configs, which are enabled in any of the executable packages that live in ",(0,i.kt)("inlineCode",{parentName:"p"},"cmd"),"."),(0,i.kt)("p",null,"This means that logging ",(0,i.kt)("em",{parentName:"p"},"is not")," set up from within models or other packages unless the files in ",(0,i.kt)("inlineCode",{parentName:"p"},"cmd")," are also being loaded. ",(0,i.kt)("em",{parentName:"p"},"If you attempt to call ",(0,i.kt)("inlineCode",{parentName:"em"},"zap.L()")," or ",(0,i.kt)("inlineCode",{parentName:"em"},"zap.S()")," without a configured logger, nothing will appear on the screen.")),(0,i.kt)("p",null,"If you need to see some output during the development process (say, for debugging purposes), it is best to use the standard lib ",(0,i.kt)("inlineCode",{parentName:"p"},"fmt")," package to print to the screen. You will also need to pass ",(0,i.kt)("inlineCode",{parentName:"p"},"-v")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"go test")," so that it prints all output, even from passing tests. The simplest way to do this is to run ",(0,i.kt)("inlineCode",{parentName:"p"},"go test")," yourself by passing it which files to run, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"go test pkg/models/* -v"),"."),(0,i.kt)("h4",{id:"log-files"},"Log files"),(0,i.kt)("p",null,"In development mode, logs from the ",(0,i.kt)("inlineCode",{parentName:"p"},"milmove")," process are written to ",(0,i.kt)("inlineCode",{parentName:"p"},"logs/dev.log"),"."),(0,i.kt)("h3",{id:"database"},"Database"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Read ",(0,i.kt)("a",{parentName:"li",href:"https://transcom.github.io/mymove-docs/docs/dev/contributing/backend/Backend-Programming-Guide/#querying-the-database-safely"},"Querying the Database Safely")," to prevent SQL injections! ","*")),(0,i.kt)("p",null,"A few commands exist for starting and stopping the DB docker container:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_run"),": Starts the DB docker container if one doesn't already exist"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_destroy"),": Stops and removes the DB docker container")),(0,i.kt)("h4",{id:"dev-db-commands"},"Dev DB Commands"),(0,i.kt)("p",null,"There are a few handy targets in the Makefile to help you interact with the dev\ndatabase. During your day-to-day, the only one you will typically need regularly\nis ",(0,i.kt)("inlineCode",{parentName:"p"},"make db_dev_e2e_populate"),". The others are for reference, or if something\ngoes wrong."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_dev_e2e_populate"),": Populates the dev DB with data to facilitate\nverification of your work when using the app locally. It seeds the DB with various\nservice members at different stages of the onboarding process, various office\nusers, moves, payment requests, etc. The data is defined in the ",(0,i.kt)("inlineCode",{parentName:"li"},"devseed.go")," file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_dev_run"),": Initializes a new database if it does not exist and runs it,\nor starts the previously initialized Docker container if it has been stopped.\nYou typically only need this after a computer restart, or if you manually quit\nDocker or otherwise stopped the DB."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_dev_create"),": Waits to connect to the DB and will create a DB if one\ndoesn't already exist (this is automatically run as part of ",(0,i.kt)("inlineCode",{parentName:"li"},"db_dev_run"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_dev_fresh"),": Destroys your database container, runs the DB, and\napplies the migrations. Useful if you want to start from scratch when the DB is\nnot working properly. This runs ",(0,i.kt)("inlineCode",{parentName:"li"},"db_dev_reset")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"db_dev_migrate"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_dev_migrate_standalone"),": Applies database migrations against your\nrunning database container but will not check for server dependencies first.")),(0,i.kt)("h4",{id:"test-db-commands"},"Test DB Commands"),(0,i.kt)("p",null,"These commands are available for the Test DB. You will rarely need to use these\nindividually since the commands to run tests already set up the test DB properly.\nOne exception is ",(0,i.kt)("inlineCode",{parentName:"p"},"make db_test_run"),", which you'll need to run after restarting\nyour computer."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_run")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_create")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_reset")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_migrate")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_migrate_standalone")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_e2e_backup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_e2e_restore")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_e2e_cleanup"))),(0,i.kt)("p",null,"The test DB commands all talk to the DB over localhost. But in a docker-only environment (like CircleCI) you may not be able to use those commands, which is why ",(0,i.kt)("inlineCode",{parentName:"p"},"*_docker")," versions exist for all of them:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_run_docker")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_create_docker")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_reset_docker")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"make db_test_migrate_docker"))),(0,i.kt)("h4",{id:"migrations"},"Migrations"),(0,i.kt)("p",null,"To add new regular and/or secure migrations, see the ",(0,i.kt)("a",{parentName:"p",href:"https://transcom.github.io/mymove-docs/docs/dev/contributing/database/Database-Migrations"},"database development guide")),(0,i.kt)("p",null,"Running migrations in local development:"),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"make db_dev_migrate")," to run migrations against your local dev environment."),(0,i.kt)("p",null,"Running migrations on Staging / Production:"),(0,i.kt)("p",null,"Migrations are run automatically by CircleCI as part of the standard deploy process."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"CircleCI builds and registers a container."),(0,i.kt)("li",{parentName:"ol"},"CircleCI deploys this container to ECS and runs it as a one-off 'task'."),(0,i.kt)("li",{parentName:"ol"},"The container downloads and execute migrations against the environment's database."),(0,i.kt)("li",{parentName:"ol"},"If migrations fail, CircleCI fails the deploy."),(0,i.kt)("li",{parentName:"ol"},"If migrations pass, CircleCI continues with the deploy.")),(0,i.kt)("h3",{id:"environment-variables"},"Environment Variables"),(0,i.kt)("p",null,"In development, we use ",(0,i.kt)("a",{parentName:"p",href:"https://direnv.net/"},"direnv")," to setup environment variables required by the application."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If you want to add a new environment variable to affect only your development machine, export it in ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc.local"),". Variables exported in this file take precedence over those in ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If you want to add a new environment variable that is required by new development, it can be added to ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc")," using one of the following:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# Add a default value for all devs that can be overridden in their .envrc.local\nexport NEW_ENV_VAR="default value"\n\n# or\n\n# Specify that an environment variable must be defined in .envrc.local\nrequire NEW_ENV_VAR "Look for info on this value in chamber and Google Drive"\n')))),(0,i.kt)("p",null,"Required variables should be placed in google docs and linked in ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc"),". The value should also be placed in ",(0,i.kt)("inlineCode",{parentName:"p"},"chamber"),"\nwith ",(0,i.kt)("inlineCode",{parentName:"p"},"DISABLE_AWS_VAULT_WRAPPER=1 AWS_REGION=us-gov-west-1 aws-vault exec transcom-gov-dev -- chamber write app-devlocal <key> <value>"),". For long blocks of text like certificates you can write them with\n",(0,i.kt)("inlineCode",{parentName:"p"},'echo "$LONG_VALUE" | DISABLE_AWS_VAULT_WRAPPER=1 AWS_REGION=us-gov-west-1 aws-vault exec transcom-gov-dev -- chamber write app-devlocal <key> -'),"."),(0,i.kt)("p",null,"For per-tier environment variables (that are not secret), simply add the variables to the relevant ",(0,i.kt)("inlineCode",{parentName:"p"},"config/env/[experimental|staging|prod].env")," file with the format ",(0,i.kt)("inlineCode",{parentName:"p"},"NAME=VALUE")," on each line. Then add the relevant section to ",(0,i.kt)("inlineCode",{parentName:"p"},"config/app.container-definition.json"),". The deploy process uses Go's ",(0,i.kt)("a",{parentName:"p",href:"https://golang.org/pkg/text/template/"},"template package")," for rendering the container definition. For example,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"MY_SPECIAL_TOKEN=abcxyz\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "MY_SPECIAL_TOKEN",\n  "value": "{{ .MY_SPECIAL_TOKEN }}"\n}\n')),(0,i.kt)("h3",{id:"documentation"},"Documentation"),(0,i.kt)("p",null,"You can view the project's GoDoc on ",(0,i.kt)("a",{parentName:"p",href:"https://godoc.org/github.com/transcom/mymove"},"godoc.org"),"."),(0,i.kt)("p",null,"Alternatively, run the documentation locally using:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# within the project's root dir\n$ godoc -http=:6060\n")),(0,i.kt)("p",null,"Then visit ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:6060/pkg/github.com/transcom/mymove/"},"http://localhost:6060/pkg/github.com/transcom/mymove/")),(0,i.kt)("h3",{id:"goland"},"GoLand"),(0,i.kt)("p",null,"GoLand supports\n",(0,i.kt)("a",{parentName:"p",href:"https://blog.jetbrains.com/go/2019/02/06/debugging-with-goland-getting-started/#debugging-a-running-application-on-the-local-machine"},"attaching the debugger to a running process"),",\nhowever this requires that the server has been built with specific flags. If you wish to use this feature in\ndevelopment add the following line ",(0,i.kt)("inlineCode",{parentName:"p"},"export GOLAND=1")," to your ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc.local"),". Once the server starts follow the steps\noutlined in the article above and you should now be able to set breakpoints using the GoLand debugger."),(0,i.kt)("h4",{id:"goland-nix"},"Goland: Nix"),(0,i.kt)("p",null,"To get Goland to play nicely with ",(0,i.kt)("inlineCode",{parentName:"p"},"nix"),", there's a few things you can set up:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Update ",(0,i.kt)("inlineCode",{parentName:"li"},"GOROOT")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"/nix/var/nix/profiles/mymove/bin/go"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Note that once you add it, Goland will resolve it to the actual path (the one above is a link), so it\u2019ll look\nsomething like ",(0,i.kt)("inlineCode",{parentName:"li"},"/nix/store/rv16prybnsmav8w1sqdgr80jcwsja98q-go-1.19.3/bin/go")))),(0,i.kt)("li",{parentName:"ul"},"Update ",(0,i.kt)("inlineCode",{parentName:"li"},"GOPATH")," to point to the ",(0,i.kt)("inlineCode",{parentName:"li"},".gopath")," dir in the ",(0,i.kt)("inlineCode",{parentName:"li"},"mymove")," repo",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"You may need to create the ",(0,i.kt)("inlineCode",{parentName:"li"},".gopath")," dir yourself."))),(0,i.kt)("li",{parentName:"ul"},"Update Node and NPM:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Node interpreter: ",(0,i.kt)("inlineCode",{parentName:"li"},"/nix/var/nix/profiles/mymove/bin/node")),(0,i.kt)("li",{parentName:"ul"},"Package manager:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This might be fixed automatically, but if not, you can point it ",(0,i.kt)("inlineCode",{parentName:"li"},"/nix/var/nix/profiles/mymove/bin/yarn")),(0,i.kt)("li",{parentName:"ul"},"Similar to ",(0,i.kt)("inlineCode",{parentName:"li"},"GOROOT"),", it will resolve to something that looks like\n",(0,i.kt)("inlineCode",{parentName:"li"},"/nix/store/cnmxp5isc3ck1bm11zryy8dnsbnm87wk-yarn-1.22.10/libexec/yarn"))))))),(0,i.kt)("h3",{id:"storybook"},"Storybook"),(0,i.kt)("p",null,"We use ",(0,i.kt)("a",{parentName:"p",href:"https://storybook.js.org"},"Storybook")," for reviewing our\ncomponent library. The current components are deployed to\n",(0,i.kt)("a",{parentName:"p",href:"https://storybook.dp3.us"},"https://storybook.dp3.us")," after each build\nof the main branch."),(0,i.kt)("p",null,"Each PR saves storybook as an artifact in CircleCI. Find the\n",(0,i.kt)("inlineCode",{parentName:"p"},"build_storybook"),' task and then go to the "ARTIFACTS" tab. Find the\nlink to ',(0,i.kt)("inlineCode",{parentName:"p"},"storybook/index.html")," and click on it."),(0,i.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Random problems may arise if you have old Docker containers running. Run ",(0,i.kt)("inlineCode",{parentName:"li"},"docker ps")," and if you see containers unrelated to our app, consider stopping them."),(0,i.kt)("li",{parentName:"ul"},"If you're having trouble accessing the API docs or the server is otherwise misbehaving, try stopping the server, running ",(0,i.kt)("inlineCode",{parentName:"li"},"make client_build"),", and then running ",(0,i.kt)("inlineCode",{parentName:"li"},"make client_run")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"make server_run"),".")),(0,i.kt)("h4",{id:"postgres-issues"},"Postgres Issues"),(0,i.kt)("p",null,"If you have problems connecting to PostgreSQL, or running related scripts, make sure you aren't already running a PostgreSQL daemon. You may see errors like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'Migrator: problem creating schema migrations: couldn\'t start a new transaction: could not create new transaction: pq: role "postgres" does not exist\n')),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'Migrator: problem creating schema migrations: couldn\'t start a new transaction: could not create new transaction: pq: database "dev_db" does not exist\n')),(0,i.kt)("p",null,"You can check this by typing ",(0,i.kt)("inlineCode",{parentName:"p"},"ps aux | grep postgres")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"brew services list")," and looking for existing processes. In the case of homebrew you can run ",(0,i.kt)("inlineCode",{parentName:"p"},"brew services stop postgresql")," to stop the service and prevent it from running at startup."),(0,i.kt)("h4",{id:"development-machine-timezone-issues"},"Development Machine Timezone Issues"),(0,i.kt)("p",null,"If you are experiencing problems like redux forms that are 'dirty' when they shouldn't be on your local environment, it may be due to a mismatch\nof your local dev machine's timezone and the assumption of UTC made by the local database. A detailed example of this sort of issue can be found in\n",(0,i.kt)("a",{parentName:"p",href:"https://www.pivotaltracker.com/n/projects/2136865/stories/160975609"},"this story"),". A workaround for this is to set the TZ environment variable\nin Mac OS for the context of your running app. This can be done by adding the following to ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc.local"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'export TZ="UTC"\n')),(0,i.kt)("p",null,"Doing so will set the timezone environment variable to UTC utilizing the same localized context as your other ",(0,i.kt)("inlineCode",{parentName:"p"},".envrc.local")," settings."),(0,i.kt)("h4",{id:"linters--pre-commit-hooks"},"Linters & Pre-commit Hooks"),(0,i.kt)("p",null,"We use a number of linters for formatting, security and error checking. Please see the ",(0,i.kt)("a",{parentName:"p",href:"https://transcom.github.io/mymove-docs/docs/dev/contributing/code-analysis/run-pre-commit-hooks"},"pre-commit documentation")," for a list of linters and troubleshooting tips."),(0,i.kt)("h3",{id:"manual-redeploys-and-other-helpful-information-in-an-emergency"},"Manual Redeploys and Other Helpful Information in an Emergency"),(0,i.kt)("p",null,"Like many modern software developers, we rely on a number of external services to be responsible for certain repeatable processes. One such example is CircleCI, which we use for deployment. It's a great tool in many ways, and reduces the surface area of what we ourselves have to manage, ideally transferring associated risk. However, it opens us up to a different risk: namely, what happens if CircleCI goes down and we need to deploy our app? For this circumstance, we have a series of scripts that can be run manually. They live in the script directory, and you can find information about how to run them ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove/tree/main/scripts#deployment-scripts"},"in this README under the Deployment Scripts heading"),"."),(0,i.kt)("p",null,"Please add any other fear-inducing scenarios and our mitigation attempts here."),(0,i.kt)("h3",{id:"pii-best-practices"},"PII Best Practices"),(0,i.kt)("p",null,"Server side: any downloadable content passed to the client should by default have an inline content disposition (like PDFs)."),(0,i.kt)("p",null,"Client side: before accessing any prod environment, fix your browser settings to display PDFs, not use an external app."),(0,i.kt)("h4",{id:"more-about-content-dispositions"},"More about content dispositions"),(0,i.kt)("p",null,"An inline disposition tells the browser to display a file inline if it can. If you instead set an attachment disposition, the browser will download the file even when it is capable of displaying the data itself. If an engineer downloads PII instead of letting their browser display it, this will cause a security incident. So make sure content like PDFs are passed to the client with inline dispositions. You can read more in ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition",title:"MDN: Content-Disposition Headers"},"the official Mozilla docs"),"."),(0,i.kt)("h4",{id:"more-about-browser-settings"},"More about browser settings"),(0,i.kt)("p",null,"Even if an inline disposition is set, most browsers still allow you to override that behavior and automatically download certain file types."),(0,i.kt)("p",null,'Before working with the prod environment, ensure you have changed your settings to display PDFs in the browser. In most browsers, you can find the relevant setting by searching "PDF" in the settings menu.'))}d.isMDXComponent=!0}}]);