"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[8857],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=o.createContext({}),l=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return o.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=l(t),m=r,v=u["".concat(d,".").concat(m)]||u[m]||p[m]||i;return t?o.createElement(v,s(s({ref:n},c),{},{components:t})):o.createElement(v,s({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=u;var a={};for(var d in n)hasOwnProperty.call(n,d)&&(a[d]=n[d]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var l=2;l<i;l++)s[l]=t[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},17919:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var o=t(87462),r=(t(67294),t(3905));const i={title:"0046 Use nodenv to manage Node versions in development"},s="Use [nodenv](https://github.com/nodenv/nodenv) to manage Node versions in development",a={unversionedId:"adrs/use-nodenv",id:"adrs/use-nodenv",title:"0046 Use nodenv to manage Node versions in development",description:"nodenv makes it easy for developers to upgrade Node in their development",source:"@site/docs/adrs/0046-use-nodenv.md",sourceDirName:"adrs",slug:"/adrs/use-nodenv",permalink:"/mymove-docs/docs/adrs/use-nodenv",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/adrs/0046-use-nodenv.md",tags:[],version:"current",sidebarPosition:46,frontMatter:{title:"0046 Use nodenv to manage Node versions in development"},sidebar:"adrsSidebar",previous:{title:"0045 Nesting Swagger paths in the Prime API with multiple IDs",permalink:"/mymove-docs/docs/adrs/nesting-swagger-paths"},next:{title:"0047 Use CircleCI to build only Pull Requests and master",permalink:"/mymove-docs/docs/adrs/build-only-pull-requests-in-circleci"}},d={},l=[{value:"Considered Alternatives",id:"considered-alternatives",level:2},{value:"Decision Outcome",id:"decision-outcome",level:2}],c={toc:l};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"use-nodenv-to-manage-node-versions-in-development"},"Use ",(0,r.kt)("a",{parentName:"h1",href:"https://github.com/nodenv/nodenv"},"nodenv")," to manage Node versions in development"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"nodenv")," makes it easy for developers to upgrade Node in their development\nenvironments."),(0,r.kt)("h2",{id:"considered-alternatives"},"Considered Alternatives"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Docker-based development environment setup"),(0,r.kt)("li",{parentName:"ul"},"Homebrew-based solution where we'd need to pin the Homebrew version of Node.")),(0,r.kt)("h2",{id:"decision-outcome"},"Decision Outcome"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"nodenv")," to manage local Node versions. It's widely used, regularly updated,\nand allows folks to have multiple Node versions on their system. The\nDocker-based development environment would provide more a consistent local\ndependency story, but would add too much overhead."))}p.isMDXComponent=!0}}]);