"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[4357],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return p}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),m=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(r),p=o,d=u["".concat(s,".").concat(p)]||u[p]||g[p]||i;return r?n.createElement(d,a(a({ref:t},l),{},{components:r})):n.createElement(d,a({ref:t},l))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var m=2;m<i;m++)a[m]=r[m];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3416:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return l},default:function(){return u}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),a=["components"],c={},s="How To Generate Mocks with Mockery",m={unversionedId:"dev/testing/writing-tests/generate-mocks-with-mockery",id:"dev/testing/writing-tests/generate-mocks-with-mockery",isDocsHomePage:!1,title:"How To Generate Mocks with Mockery",description:"Mockery provides the ability to easily generate mocks for golang interfaces. It removes the boilerplate coding required to use mocks.",source:"@site/docs/dev/testing/writing-tests/generate-mocks-with-mockery.md",sourceDirName:"dev/testing/writing-tests",slug:"/dev/testing/writing-tests/generate-mocks-with-mockery",permalink:"/mymove-docs/docs/dev/testing/writing-tests/generate-mocks-with-mockery",editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/dev/testing/writing-tests/generate-mocks-with-mockery.md",tags:[],version:"current",frontMatter:{},sidebar:"devSidebar",previous:{title:"Writing-Tests-Using-React-Testing-Library-and-Jest",permalink:"/mymove-docs/docs/dev/testing/writing-tests/Writing-Tests-Using-React-Testing-Library-and-Jest"},next:{title:"How To Unit Test React Components",permalink:"/mymove-docs/docs/dev/testing/writing-tests/unit-test-react-components"}},l=[{value:"Auto-generating mocks with <code>go generate</code>",id:"auto-generating-mocks-with-go-generate",children:[]}],g={toc:l};function u(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-generate-mocks-with-mockery"},"How To Generate Mocks with Mockery"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/vektra/mockery"},"Mockery")," provides the ability to easily generate mocks for golang interfaces. It removes the boilerplate coding required to use mocks."),(0,i.kt)("p",null," ",(0,i.kt)("em",{parentName:"p"},"In Golang, mocks can only be created on interfaces - not structs. So, it is important that for whichever mock you are trying to generate, it should correspond to the appropriate interface.")),(0,i.kt)("h2",{id:"auto-generating-mocks-with-go-generate"},"Auto-generating mocks with ",(0,i.kt)("inlineCode",{parentName:"h2"},"go generate")),(0,i.kt)("p",null," The ",(0,i.kt)("inlineCode",{parentName:"p"},"make mocks_generate")," command will regenerate mocks for all interfaces tagged with the appropriate ",(0,i.kt)("inlineCode",{parentName:"p"},"go generate")," command. To add an interface to the list of auto-generated mocks, just add a\n",(0,i.kt)("inlineCode",{parentName:"p"},"go:generate")," comment like below and update the name with your interface name."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-.go"},"// AccessCodeClaimer is the service object interface for ValidateAccessCode\n//go:generate mockery -name AccessCodeClaimer\ntype AccessCodeClaimer interface {\n    ClaimAccessCode(code string, serviceMemberID uuid.UUID) (*models.AccessCode, *validate.Errors, error)\n}\n")))}u.isMDXComponent=!0}}]);