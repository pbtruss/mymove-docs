"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[3064],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,v=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?o.createElement(v,l(l({ref:t},c),{},{components:n})):o.createElement(v,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},34015:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var o=n(87462),r=n(63366),a=(n(67294),n(3905)),l=["components"],i={sidebar_position:4},s="Local Load Test Setup",u={unversionedId:"tools/locust/local-load-test-setup",id:"tools/locust/local-load-test-setup",isDocsHomePage:!1,title:"Local Load Test Setup",description:"This will cover local setup necessary to run locust locally. The instructions vary depending on which server you are",source:"@site/docs/tools/locust/local-load-test-setup.md",sourceDirName:"tools/locust",slug:"/tools/locust/local-load-test-setup",permalink:"/mymove-docs/docs/tools/locust/local-load-test-setup",editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/tools/locust/local-load-test-setup.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"toolsSidebar",previous:{title:"Running Locust Locally",permalink:"/mymove-docs/docs/tools/locust/running-locust-locally"},next:{title:"Running Locust from AWS",permalink:"/mymove-docs/docs/tools/locust/running-locust-from-aws"}},c=[{value:"Setup To Run Against A Local MyMove Server",id:"setup-to-run-against-a-local-mymove-server",children:[{value:"Local MyMove Server",id:"local-mymove-server",children:[]},{value:"Local Server Data",id:"local-server-data",children:[]}]},{value:"Setup To Run Against The Load Test Environment MyMove Server",id:"setup-to-run-against-the-load-test-environment-mymove-server",children:[]}],p={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"local-load-test-setup"},"Local Load Test Setup"),(0,a.kt)("p",null,"This will cover local setup necessary to run ",(0,a.kt)("inlineCode",{parentName:"p"},"locust")," locally. The instructions vary depending on which server you are\ntargeting."),(0,a.kt)("h2",{id:"setup-to-run-against-a-local-mymove-server"},"Setup To Run Against A Local MyMove Server"),(0,a.kt)("h3",{id:"local-mymove-server"},"Local MyMove Server"),(0,a.kt)("p",null,"You will need to check out and set up the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/transcom/mymove"},"MilMove")," project."),(0,a.kt)("p",null,"Follow the setup instructions in the ",(0,a.kt)("inlineCode",{parentName:"p"},"mymove")," README, all the way through running the local server (",(0,a.kt)("inlineCode",{parentName:"p"},"make server_run"),").\nYou don't need to run the user interface in order to run load tests (so you can skip the ",(0,a.kt)("inlineCode",{parentName:"p"},"make client_run")," step), unless\nyou would like to be able to log in and look at data using the ",(0,a.kt)("inlineCode",{parentName:"p"},"mymove")," UI."),(0,a.kt)("h3",{id:"local-server-data"},"Local Server Data"),(0,a.kt)("p",null,"Our goal is to eventually have all the data we need set up by the load tests, but until that's done, you should populate\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"mymove")," server with data using this command (in the ",(0,a.kt)("inlineCode",{parentName:"p"},"mymove")," repo directory):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"make db_dev_e2e_populate  ## populates the development database with test data\n")),(0,a.kt)("h2",{id:"setup-to-run-against-the-load-test-environment-mymove-server"},"Setup To Run Against The Load Test Environment MyMove Server"),(0,a.kt)("p",null,"To load test against the API in the load test environment, you will need to install and set up ",(0,a.kt)("inlineCode",{parentName:"p"},"direnv"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"chamber"),", and\n",(0,a.kt)("inlineCode",{parentName:"p"},"aws-vault"),". If you have already set up these tools in order to run the ",(0,a.kt)("inlineCode",{parentName:"p"},"mymove")," project, you do not need to repeat\nthese steps. Otherwise, please follow the instructions in the ",(0,a.kt)("inlineCode",{parentName:"p"},"mymove")," repo to complete this setup:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/transcom/mymove#setup-aws-services-optional"},"Setup: AWS Services")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/transcom/mymove#setup-direnv"},"Setup: ",(0,a.kt)("inlineCode",{parentName:"a"},"direnv")," and ",(0,a.kt)("inlineCode",{parentName:"a"},"chamber")))),(0,a.kt)("p",null,"Now in the load test repo, run the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cp .envrc.chamber.template .envrc.chamber\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"direnv allow\n")),(0,a.kt)("p",null,"Once you have loaded the secrets from ",(0,a.kt)("inlineCode",{parentName:"p"},"chamber"),", which will include the ",(0,a.kt)("inlineCode",{parentName:"p"},"dp3")," certificate and private key, you may run\nyour load tests using ",(0,a.kt)("inlineCode",{parentName:"p"},"dp3")," as the host value."))}d.isMDXComponent=!0}}]);