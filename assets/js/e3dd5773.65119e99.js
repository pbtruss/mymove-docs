"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[6248],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=i,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var l=2;l<o;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},84220:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),i=(n(67294),n(3905));const o={sidebar_position:2},r="Acceptance testing notifications",s={unversionedId:"backend/testing/acceptance-testing-notifications",id:"backend/testing/acceptance-testing-notifications",title:"Acceptance testing notifications",description:"Acceptance testing notifications involves four steps",source:"@site/docs/backend/testing/acceptance-testing-notifications.md",sourceDirName:"backend/testing",slug:"/backend/testing/acceptance-testing-notifications",permalink:"/mymove-docs/docs/backend/testing/acceptance-testing-notifications",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/backend/testing/acceptance-testing-notifications.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"backendSidebar",previous:{title:"Acceptance testing Syncada",permalink:"/mymove-docs/docs/backend/testing/acceptance-testing-syncada-edi-invoicing"},next:{title:"Acceptance testing payment requests",permalink:"/mymove-docs/docs/backend/testing/acceptance-testing-payment-requests"}},c={},l=[{value:"1. Creating a subscription for an event",id:"1-creating-a-subscription-for-an-event",level:2},{value:"Inserting a subscription using SQL",id:"inserting-a-subscription-using-sql",level:3},{value:"2. Start the server and webhook-client",id:"2-start-the-server-and-webhook-client",level:2},{value:"3. Creating a notification for that event",id:"3-creating-a-notification-for-that-event",level:2},{value:"4. Checking that the notification was sent to the Prime",id:"4-checking-that-the-notification-was-sent-to-the-prime",level:2}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"acceptance-testing-notifications"},"Acceptance testing notifications"),(0,i.kt)("p",null,"Acceptance testing notifications involves four steps"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Creating a subscription for an event"),(0,i.kt)("li",{parentName:"ol"},"Start the server and webhook-client"),(0,i.kt)("li",{parentName:"ol"},"Creating a notification for that event"),(0,i.kt)("li",{parentName:"ol"},"Checking that the notification was sent to the Prime")),(0,i.kt)("p",null,"This needs to be done in devlocal and not on staging as we are unable to get the webhook-client on staging until we have infra support."),(0,i.kt)("h2",{id:"1-creating-a-subscription-for-an-event"},"1. Creating a subscription for an event"),(0,i.kt)("p",null,"Subscriptions are store in the ",(0,i.kt)("inlineCode",{parentName:"p"},"webhook_subscriptions")," table."),(0,i.kt)("p",null,"Currently we have no endpoint to access these. Instead, we just add them into the database."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"We do not have any subscriptions live on staging"))),(0,i.kt)("h3",{id:"inserting-a-subscription-using-sql"},"Inserting a subscription using SQL"),(0,i.kt)("p",null,"Here's the SQL to insert a subscription for a ",(0,i.kt)("inlineCode",{parentName:"p"},"PaymentRequest.Update")," event."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql",metastring:"{5}","{5}":!0},"INSERT INTO public.webhook_subscriptions\n(id,subscriber_id,status,event_key,callback_url,created_at,updated_at)\nVALUES\n('5cd33db4-9441-4d2d-bd7c-f9efd9ce310c','5db13bb4-6d29-4bdb-bc81-262f4513ecf6',\n'ACTIVE','PaymentRequest.Update','https://primelocal:9443/support/v1/webhook-notify',\n'2020-08-24 18:31:29.171','2020-08-24 18:31:29.171');\n")),(0,i.kt)("p",null,"You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"psql-dev")," to do the insertion. On the command prompt in the MilMove\nrepo, call ",(0,i.kt)("inlineCode",{parentName:"p"},"psql-dev")," to start a prompt on the Postgres database."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'>_ psql-dev\npsql (12.1, server 12.2 (Debian 12.2-2.pgdg100+1))\nType "help" for help.\n')),(0,i.kt)("p",null,"Then paste the SQL command from above, you should see the following response:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"dev_db=<paste command here>\nINSERT 0 1\n")),(0,i.kt)("p",null,'If you do not, you may need to get the right subscriber ID from your db, with the name "Prime McPrime Contractor"'),(0,i.kt)("p",null,"Once you are successful in adding the subscription, use ",(0,i.kt)("inlineCode",{parentName:"p"},"\\q")," to exit the ",(0,i.kt)("inlineCode",{parentName:"p"},"psql-dev")," prompt."),(0,i.kt)("h2",{id:"2-start-the-server-and-webhook-client"},"2. Start the server and webhook-client"),(0,i.kt)("p",null,"Start the MilMove server with ",(0,i.kt)("inlineCode",{parentName:"p"},"make server_run")),(0,i.kt)("p",null,"Start the webhook client in a separate terminal with the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"webhook-client webhook-notify --period 20 --insecure\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Troubleshooting")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you do not have ",(0,i.kt)("inlineCode",{parentName:"p"},"webhook-client")," in your ",(0,i.kt)("inlineCode",{parentName:"p"},"$PATH"),", you will need to run the\nfollowing make commands to create the needed binary."),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Check if webhook-client is in your $PATH"',title:'"Check',if:!0,"webhook-client":!0,is:!0,in:!0,your:!0,'$PATH"':!0},"which webhook-client\n")),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Remove and build webhook-client binary"',title:'"Remove',and:!0,build:!0,"webhook-client":!0,'binary"':!0},"rm -rvf bin/webhook-client && make bin/webhook-client\n")))),(0,i.kt)("p",null,"The client will run and check every 20 seconds for new notifications to send.\nWhen it finds a pending notification, and an active subscription, it will send\nit to the server."),(0,i.kt)("p",null,"At first, it may not find any notifications, and you should see the following\nevery 20s:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'2020-08-25T21:43:17.175Z    DEBUG   webhook/webhook.go:146  Notification Check: {"Num notifications found": 0}\n')),(0,i.kt)("h2",{id:"3-creating-a-notification-for-that-event"},"3. Creating a notification for that event"),(0,i.kt)("p",null,'To create a notification, you will use an endpoint that has the trigger added. For example, the above subscription was for "PaymentRequest.Update". That can be triggered by the ',(0,i.kt)("inlineCode",{parentName:"p"},"updatePaymentRequestStatus")," endpoint."),(0,i.kt)("p",null,"Using Postman, send an update to that endpoint. Set the status to\n",(0,i.kt)("inlineCode",{parentName:"p"},"'SENT_TO_GEX'"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh",metastring:'{7} title="Sample request"',"{7}":!0,title:'"Sample','request"':!0},'PATCH /support/v1/payment-requests/a2c34dba-015f-4f96-a38b-0c0b9272e208/status HTTP/1.1\nHost: https://primelocal:9443\nContent-Type: application/json\nIf-Match: MjAyMC0wOC0yNVQxODo1MToxMi42ODgwODha\n\n{\n    "status": "SENT_TO_GEX",\n    "rejectionReason": ""\n}\n')),(0,i.kt)("p",null,"Be sure to use the proper etag which you can get from the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListMTOPaymentRequests")," endpoint."),(0,i.kt)("p",null,"If your notification was successful, you should see an entry in the server log:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"2020-08-25T18:51:12.742Z    INFO    event/notification.go:145   event.NotificationEventHandler: Notification created and stored.\n")),(0,i.kt)("h2",{id:"4-checking-that-the-notification-was-sent-to-the-prime"},"4. Checking that the notification was sent to the Prime"),(0,i.kt)("p",null,"Once the notification is created, check the client to see that it sends it successfully!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh",metastring:"{3}","{3}":!0},'2020-08-25T21:44:57.173Z    DEBUG   webhook/webhook.go:146  Notification Check: {"Num notifications found": 1}\n2020-08-25T21:44:57.177Z    DEBUG   webhook/webhook.go:161  Subscription Check! {"Num subscriptions found": 1}\n2020-08-25T21:44:57.192Z    INFO    webhook/webhook.go:125  Notification successfully sent: {"Status": "200 OK", "Body": "{\\"id\\":\\"0586dde3-df69-4b1e-8cc5-49bc83764600\\",\\"triggeredAt\\":\\"0001-01-01T00:00:00.000Z\\"}\\n"}\n')))}d.isMDXComponent=!0}}]);