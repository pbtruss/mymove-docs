"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[9842],{98995:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var n=a(87462),l=(a(67294),a(3905));a(29420);const i={},o=void 0,r={unversionedId:"about/Welcome",id:"about/Welcome",title:"Welcome",description:"This is the migrated root README from the Transcom mymove repo. This is a living document that is being worked on.",source:"@site/docs/about/Welcome.md",sourceDirName:"about",slug:"/about/Welcome",permalink:"/mymove-docs/docs/about/Welcome",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/about/Welcome.md",tags:[],version:"current",frontMatter:{},sidebar:"aboutSidebar",previous:{title:"DMDC Identity Web Services",permalink:"/mymove-docs/docs/about/security/dmdc-identity-web-services"},next:{title:"API / Swagger",permalink:"/mymove-docs/docs/about/development/api-and-swagger"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Login.gov",id:"logingov",level:2},{value:"Creating alternative users with the same email address",id:"creating-alternative-users-with-the-same-email-address",level:3},{value:"Project Layout",id:"project-layout",level:2},{value:"Application Setup",id:"application-setup",level:2},{value:"Setup: Base Setup",id:"setup-base-setup",level:3},{value:"Homebrew",id:"homebrew",level:4},{value:"Setup: Git",id:"setup-git",level:4},{value:"Setup: Project Checkout",id:"setup-project-checkout",level:4},{value:"Setup: Editor Config",id:"setup-editor-config",level:4},{value:"Setup: Nix",id:"setup-nix",level:3},{value:"Nix: Initial Setup",id:"nix-initial-setup",level:4},{value:"Nix: Clean Up Local Env",id:"nix-clean-up-local-env",level:4},{value:"Nix: Installing Dependencies",id:"nix-installing-dependencies",level:4},{value:"Nix: Add Or Update Packages",id:"nix-add-or-update-packages",level:4},{value:"Setup: Manual",id:"setup-manual",level:3},{value:"Manual: Prerequisites",id:"manual-prerequisites",level:4},{value:"Setup: Shared",id:"setup-shared",level:3},{value:"Setup: AWS Services",id:"setup-aws-services",level:4},{value:"Setup: Direnv",id:"setup-direnv",level:4},{value:"Helpful variables for <code>.envrc.local</code>",id:"helpful-variables-for-envrclocal",level:5},{value:"Troubleshooting direnv &amp; chamber",id:"troubleshooting-direnv--chamber",level:5},{value:"Setup: Run the app",id:"setup-run-the-app",level:4},{value:"Setup: Dependencies",id:"setup-dependencies",level:4},{value:"Setup: Pre-Commit",id:"setup-pre-commit",level:5},{value:"Pre-Commit Troubleshooting (Manual): Process hanging on install hooks",id:"pre-commit-troubleshooting-manual-process-hanging-on-install-hooks",level:6},{value:"Pre-Commit Troubleshooting (Nix): SSL: CERTIFICATE VERIFY FAILED",id:"pre-commit-troubleshooting-nix-ssl-certificate-verify-failed",level:6},{value:"Setup: Database",id:"setup-database",level:5},{value:"Setup: Server",id:"setup-server",level:5},{value:"Server Dependencies",id:"server-dependencies",level:6},{value:"Setup: MilMove Local Client",id:"setup-milmove-local-client",level:5},{value:"Other Possible Setups",id:"other-possible-setups",level:3},{value:"Setup: Office Local client",id:"setup-office-local-client",level:4},{value:"Setup: Admin Local client",id:"setup-admin-local-client",level:4},{value:"Setup: Orders Gateway",id:"setup-orders-gateway",level:4},{value:"Setup: Prime API",id:"setup-prime-api",level:4},{value:"Development",id:"development",level:2},{value:"GoLand",id:"goland",level:3},{value:"Goland: Nix",id:"goland-nix",level:4}],u={toc:p};function m(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"This is the migrated root README from the Transcom mymove repo. This is a living document that is being worked on.")),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"Please check the ",(0,l.kt)("a",{parentName:"p",href:"https://transcom.github.io/mymove-docs/docs"},"MilMove Development Documentation")," for details on the project itself."),(0,l.kt)("h2",{id:"logingov"},"Login.gov"),(0,l.kt)("p",null,"You'll need accounts for login.gov and the login.gov sandbox. These will\nrequire two-factor authentication, so have your second factor (one of: phone,\nauthentication app, security key, CAC) on hand. To create an account at\nlogin.gov, use your regular ",(0,l.kt)("inlineCode",{parentName:"p"},"truss.works")," email and follow ",(0,l.kt)("a",{parentName:"p",href:"https://login.gov/help/creating-an-account/how-to-create-an-account/"},"the official\ninstructions"),".\nTo create an account in the sandbox, follow the same instructions, but ",(0,l.kt)("a",{parentName:"p",href:"https://idp.int.identitysandbox.gov/sign_up/enter_email"},"in the\nsandbox server"),". Do\n",(0,l.kt)("em",{parentName:"p"},"not")," use your regular email address in the sandbox."),(0,l.kt)("h3",{id:"creating-alternative-users-with-the-same-email-address"},"Creating alternative users with the same email address"),(0,l.kt)("p",null,"You can use the plus sign ",(0,l.kt)("inlineCode",{parentName:"p"},"+")," to create a new Truss email address.\n",(0,l.kt)("inlineCode",{parentName:"p"},"name+some_string@truss.works")," will be treated as a new address, but will be\nrouted to your ",(0,l.kt)("inlineCode",{parentName:"p"},"name@truss.works")," email automatically. Don't use this for the\noffice-side of account creation. It's helpful to use these types of accounts for\nthe customer-side accounts."),(0,l.kt)("h2",{id:"project-layout"},"Project Layout"),(0,l.kt)("p",null,"All of our code is intermingled in the top level directory of ",(0,l.kt)("inlineCode",{parentName:"p"},"mymove"),". Here is an explanation of what some of these\ndirectories contain:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},".circleci"),": Directory for CircleCI CI/CD configuration"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bin"),": A location for tools compiled from the ",(0,l.kt)("inlineCode",{parentName:"li"},"cmd")," directory"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"build"),": The build output directory for the client. This is what the development server serves"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cmd"),": The location of main packages for any go binaries we build"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"config"),": Config files for the database and AWS ECS. Also certificates."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cypress"),": The integration test files for the ",(0,l.kt)("a",{parentName:"li",href:"https://www.cypress.io/"},"Cypress tool")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"docs"),": A location for docs for the project. This is where ADRs are"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"internal"),": Generated code for duty station loader"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"migrations"),": Database migrations, see ","[./migrations/README.md]"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"node_modules"),": Cached javascript dependencies for the client"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pkg"),": The location of all of our go code for the server and various tools"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"public"),": The client's static resources"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"scripts"),": A location for tools helpful for developing this project"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"src"),": The react source code for the client"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"swagger"),": The swagger definition files for each of our APIs")),(0,l.kt)("h2",{id:"application-setup"},"Application Setup"),(0,l.kt)("p",null,"Note: These instructions are a living document and often fall out-of-date.\nIf you run into anything that needs correcting or updating, please create\na PR with those changes to help those coming after you."),(0,l.kt)("p",null,"There are two main ways we have for setting up local development:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using ",(0,l.kt)("inlineCode",{parentName:"li"},"nix")," with a bit of ",(0,l.kt)("inlineCode",{parentName:"li"},"homebrew")),(0,l.kt)("li",{parentName:"ul"},"Using primarily only ",(0,l.kt)("inlineCode",{parentName:"li"},"homebrew"))),(0,l.kt)("p",null,"Both need a bit of base setup before, but then you can follow whichever path you prefer after that. There are also a few parts that may be shared between both setups."),(0,l.kt)("h3",{id:"setup-base-setup"},"Setup: Base Setup"),(0,l.kt)("p",null,"There are a number of things you'll need at a minimum to be able to work with this project."),(0,l.kt)("h4",{id:"homebrew"},"Homebrew"),(0,l.kt)("p",null,"We use ",(0,l.kt)("a",{parentName:"p",href:"https://brew.sh"},"Homebrew")," to manage a few of the packages we need for this project."),(0,l.kt)("p",null,"Whether or not you already have Homebrew installed, you'll need to make sure it's\nup to date and ready to brew:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'SKIP_LOCAL=true /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/trussworks/fresh-brew/main/fresh-press)"\n')),(0,l.kt)("p",null,"If you're using the Fish shell, run this command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"SKIP_LOCAL=true bash (curl -fsSL https://raw.githubusercontent.com/trussworks/fresh-brew/main/fresh-press | psub)\n")),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/trussworks/fresh-brew"},"trussworks/fresh-brew repo"),"\nfor more information."),(0,l.kt)("h4",{id:"setup-git"},"Setup: Git"),(0,l.kt)("p",null,"Use your work email when making commits to our repositories. The simplest path to correctness is setting global config:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'git config --global user.email "trussel@truss.works"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'git config --global user.name "Trusty Trussel"\n')),(0,l.kt)("p",null,"If you drop the ",(0,l.kt)("inlineCode",{parentName:"p"},"--global")," flag these settings will only apply to the current repo. If you ever re-clone that repo or\nclone another repo, you will need to remember to set the local config again. You won't. Use the global config. :-)"),(0,l.kt)("p",null,'For web-based Git operations, GitHub will use your primary email unless you choose "Keep my email address private".\nIf you don\'t want to set your work address as primary, please\n',(0,l.kt)("a",{parentName:"p",href:"https://github.com/settings/emails"},"turn on the privacy setting"),"."),(0,l.kt)("p",null,"Note if you want use HTTPS instead of SSH for working with git, since we want 2-factor-authentication enabled, you need\nto ",(0,l.kt)("a",{parentName:"p",href:"https://gist.github.com/ateucher/4634038875263d10fb4817e5ad3d332f"},"create a personal access token")," and use that as\nyour password."),(0,l.kt)("h4",{id:"setup-project-checkout"},"Setup: Project Checkout"),(0,l.kt)("p",null,"You can checkout this repository by running"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:transcom/mymove.git\n")),(0,l.kt)("p",null,"Please check out the code in a directory like ",(0,l.kt)("inlineCode",{parentName:"p"},"~/Projects/mymove"),". You can check the code out anywhere EXCEPT inside your ",(0,l.kt)("inlineCode",{parentName:"p"},"$GOPATH"),". As an example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p ~/Projects && cd ~/Projects\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:transcom/mymove.git\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"cd mymove\n")),(0,l.kt)("p",null,"You will then find the code at ",(0,l.kt)("inlineCode",{parentName:"p"},"~/Projects/mymove"),"."),(0,l.kt)("h4",{id:"setup-editor-config"},"Setup: Editor Config"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://editorconfig.org/"},"EditorConfig")," allows us to manage editor configuration (like indent sizes) with a\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/transcom/ppp/blob/main/.editorconfig"},"file")," in the repo. Install the appropriate plugin in your\neditor to take advantage of that if you wish."),(0,l.kt)("h3",{id:"setup-nix"},"Setup: Nix"),(0,l.kt)("p",null,"If you need help with this setup, you can ask for help in the\n",(0,l.kt)("a",{parentName:"p",href:"https://trussworks.slack.com/archives/C01KTH6HP7D"},"Truss slack #code-nix channel"),"."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#nix-initial-setup"},"Initial Setup")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#nix-clean-up-local-env"},"Clean Up Local Env")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#nix-installing-dependencies"},"Install Dependencies")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#nix-add-or-update-packages"},"Add or Update Packages")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#setup-run-the-app"},"Run the app"))),(0,l.kt)("h4",{id:"nix-initial-setup"},"Nix: Initial Setup"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"First read the overview in the\n",(0,l.kt)("a",{parentName:"li",href:"https://github.com/trussworks/Engineering-Playbook/tree/main/developing/nix"},"Truss Engineering Playbook"),"."),(0,l.kt)("li",{parentName:"ol"},"Follow the installation instructions in the playbook.")),(0,l.kt)("h4",{id:"nix-clean-up-local-env"},"Nix: Clean Up Local Env"),(0,l.kt)("p",null,"This section is only if you had previously set up any of these tools/packages. It is also optional, with the following\nthe caveat of this note:"),(0,l.kt)("p",null,"\u26a0\ufe0f NOTE: If you need any of the packages/tools for other things that you won't use ",(0,l.kt)("inlineCode",{parentName:"p"},"nix")," for, you can set things\nup so that they both work side by side, but you'll just have to set up your ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")," properly. And even then, there may be\nother steps necessary which aren't documented here."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Disable or uninstall ",(0,l.kt)("inlineCode",{parentName:"p"},"nodenv"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"asdf")," or any other version switchers for ",(0,l.kt)("inlineCode",{parentName:"p"},"mymove"),"."),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"nodenv"),":"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"TLDR (disable only): remove ",(0,l.kt)("inlineCode",{parentName:"li"},'eval "$(nodenv init -)"')," from ",(0,l.kt)("inlineCode",{parentName:"li"},".zshrc")," (or your shell's config file)"),(0,l.kt)("li",{parentName:"ol"},"Full instructions: ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nodenv/nodenv#uninstalling-nodenv"},"Uninstalling nodenv")))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"asdf"),":"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"See ",(0,l.kt)("a",{parentName:"p",href:"https://asdf-vm.com/#/core-manage-asdf?id=remove"},"Remove asdf"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Remove setting of ",(0,l.kt)("inlineCode",{parentName:"p"},"GOPATH")," and putting ",(0,l.kt)("inlineCode",{parentName:"p"},"GOPATH")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")," in ",(0,l.kt)("inlineCode",{parentName:"p"},".zshrc")," (or your shell's config file). Looks\nsomething like this:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"export GOPATH=~/dev/go\nexport PATH=$(go env GOPATH)/bin:$PATH\n")))))))),(0,l.kt)("h4",{id:"nix-installing-dependencies"},"Nix: Installing Dependencies"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Install a few MilMove dependencies:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"nix-env -i aws-vault chamber direnv bash\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#setup-aws-services"},"Set up AWS services"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Configure direnv:"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#setup-direnv"},"Set up direnv")),(0,l.kt)("li",{parentName:"ol"},"In ",(0,l.kt)("inlineCode",{parentName:"li"},".zshrc")," (or the relevant one for you), the ",(0,l.kt)("inlineCode",{parentName:"li"},"nix")," setup line (inserted by the ",(0,l.kt)("inlineCode",{parentName:"li"},"nix")," installation) needs to run\nbefore the ",(0,l.kt)("inlineCode",{parentName:"li"},"direnv")," hook setup."))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run ",(0,l.kt)("inlineCode",{parentName:"p"},"./nix/update.sh")),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"NOTE: If the nix dependencies change, you should see a warning from direnv:")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-text"},"direnv: WARNING: nix packages out of date. Run nix/update.sh\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make deps_nix\n")),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"This will install some things like ",(0,l.kt)("inlineCode",{parentName:"li"},"pre-commit")," hooks, ",(0,l.kt)("inlineCode",{parentName:"li"},"node_modules"),", etc. You can see\n",(0,l.kt)("a",{parentName:"li",href:"#setup-dependencies"},"Setup: Dependencies")," for more info on some of the parts.")))),(0,l.kt)("h4",{id:"nix-add-or-update-packages"},"Nix: Add Or Update Packages"),(0,l.kt)("p",null,"First, you need to find the package you are looking for."),(0,l.kt)("p",null,"Visit ",(0,l.kt)("a",{parentName:"p",href:"https://ahobson.github.io/nix-package-search/#/search"},"nix-package-search")),(0,l.kt)("p",null,"Search for a package, e.g. ",(0,l.kt)("inlineCode",{parentName:"p"},"go-"),". The first time you search, it may be\nslow and take almost a minute to get results, but it will be faster\nafter that."),(0,l.kt)("p",null,"When you see the version of the package you want, click on the eye\nicon to unfold the settings."),(0,l.kt)("p",null,"Add or update the package to ",(0,l.kt)("inlineCode",{parentName:"p"},"nix/default.nix")),(0,l.kt)("h3",{id:"setup-manual"},"Setup: Manual"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#setup-aws-services"},"Set up AWS services")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#manual-prerequisites"},"Prerequisites")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#setup-direnv"},"Set up direnv")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#setup-run-the-app"},"Run the app"))),(0,l.kt)("h4",{id:"manual-prerequisites"},"Manual: Prerequisites"),(0,l.kt)("p",null,"We have scripts that will install all the dependencies for you, as well as configure your shell file with all the required commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"SKIP_CHECKS=true make prereqs\n")),(0,l.kt)("p",null,"This will install everything listed in ",(0,l.kt)("inlineCode",{parentName:"p"},"Brewfile.local"),", as well as Docker."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note"),": The script might ask you for your macOS password at certain points, like when installing opensc, or when it needs to write to your ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/hosts")," file."),(0,l.kt)("p",null,"Once this script is finished, quit and restart your terminal, then complete the\ninstallation:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make deps\n")),(0,l.kt)("p",null,"This will install ",(0,l.kt)("inlineCode",{parentName:"p"},"pre-commit")," hooks and frontend client dependencies. See ",(0,l.kt)("a",{parentName:"p",href:"#setup-dependencies"},"Setup: Dependencies")," for more info."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note that installing and configuring pre-commit the first time takes about 3 minutes.")),(0,l.kt)("p",null,"Going forward, feel free to run ",(0,l.kt)("inlineCode",{parentName:"p"},"make prereqs")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"make deps")," as often as you'd like to keep your system up to date. Whenever we update the app to a newer version of Go or Node, all you have to run is ",(0,l.kt)("inlineCode",{parentName:"p"},"make prereqs")," and it will update everything for you."),(0,l.kt)("h3",{id:"setup-shared"},"Setup: Shared"),(0,l.kt)("h4",{id:"setup-aws-services"},"Setup: AWS Services"),(0,l.kt)("p",null,"This project uses AWS services which means you'll need an account to work with parts of it. AWS credentials are managed\nvia ",(0,l.kt)("inlineCode",{parentName:"p"},"aws-vault"),". Once you have received AWS credentials (which are provided by the infrastructure team), you can follow\nthese instructions to\n",(0,l.kt)("a",{parentName:"p",href:"https://dp3.atlassian.net/wiki/spaces/MT/pages/1250066433/0029+AWS+Organization+Authentication"},"finish setting up AWS"),"."),(0,l.kt)("h4",{id:"setup-direnv"},"Setup: Direnv"),(0,l.kt)("p",null,"For managing local environment variables, we're using ",(0,l.kt)("a",{parentName:"p",href:"https://direnv.net/"},"direnv"),"."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"direnv allow\n")),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"This will load up the ",(0,l.kt)("inlineCode",{parentName:"li"},".envrc")," file. It should complain that you have missing variables. We'll fix that next.")))),(0,l.kt)("p",null,"To fix the missing variables issue, you can do one of the following things:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Let ",(0,l.kt)("inlineCode",{parentName:"p"},"direnv")," get secret values with ",(0,l.kt)("inlineCode",{parentName:"p"},"chamber"),". To enable this, run:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"cp .envrc.chamber.template .envrc.chamber\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Note")," that this method does not work for users of the ",(0,l.kt)("inlineCode",{parentName:"p"},"fish")," shell unless you replace ",(0,l.kt)("inlineCode",{parentName:"p"},"direnv allow")," with"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"direnv export fish | source\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Note also")," if you have a very poor internet connection, this method may be\nproblematic to you.")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"An alternative is to add a ",(0,l.kt)("inlineCode",{parentName:"p"},".envrc.local")," file. Then run:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"DISABLE_AWS_VAULT_WRAPPER=1 AWS_REGION=us-gov-west-1 aws-vault exec transcom-gov-dev -- chamber env app-devlocal >> .envrc.local\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If you don't have access to ",(0,l.kt)("inlineCode",{parentName:"p"},"chamber"),", you can also run"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"touch .envrc.local\n")),(0,l.kt)("p",{parentName:"li"},"then add any values that the output from ",(0,l.kt)("inlineCode",{parentName:"p"},"direnv")," asks you to define."))),(0,l.kt)("h5",{id:"helpful-variables-for-envrclocal"},"Helpful variables for ",(0,l.kt)("inlineCode",{parentName:"h5"},".envrc.local")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Increase concurrency of ",(0,l.kt)("inlineCode",{parentName:"p"},"golangci-lint"),"; defaults to 6 on dev machines and to 1 in CircleCI."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"export GOLANGCI_LINT_CONCURRENCY=8\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Enable go code debugging in goland"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"export GOLAND=1\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Silence SQL logs locally; we default this to be true in ",(0,l.kt)("inlineCode",{parentName:"p"},".envrc")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"export DB_DEBUG=0\n")))),(0,l.kt)("h5",{id:"troubleshooting-direnv--chamber"},"Troubleshooting direnv & chamber"),(0,l.kt)("p",null,"Make sure you have the latest version of Chamber that supports the ",(0,l.kt)("inlineCode",{parentName:"p"},"env")," command\noption. You may run into the following error if the version of Chamber you have\ninstalled does not support ",(0,l.kt)("inlineCode",{parentName:"p"},"env"),". The error presents itself because of the\n",(0,l.kt)("inlineCode",{parentName:"p"},"chamber")," commands that ",(0,l.kt)("inlineCode",{parentName:"p"},"direnv")," runs as part of the ",(0,l.kt)("inlineCode",{parentName:"p"},".envrc.*")," files shown\nabove."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'>_ cd mymove\ndirenv: loading .envrc.chamber\nError: unknown command "env" for "chamber"\nRun \'chamber --help\' for usage.\n')),(0,l.kt)("h4",{id:"setup-run-the-app"},"Setup: Run the app"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"If this is your very first time setting up this project, you'll need to launch Docker first, follow the prompts to allow macOS to open it, and agree to Docker's terms of service.")),(0,l.kt)("p",null,"You might also need to launch Docker if you restarted your computer and you configured Docker to not automatically launch after a restart."),(0,l.kt)("p",null,"Once Docker is up and running, the following commands will get ",(0,l.kt)("inlineCode",{parentName:"p"},"mymove")," running on your machine."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run the backend server"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run\n")),(0,l.kt)("p",{parentName:"li"},"This command also ensures the database is up and running and that the\nlatest migrations are applied. See ",(0,l.kt)("a",{parentName:"p",href:"#setup-database"},"Setup: Database")," and\n",(0,l.kt)("a",{parentName:"p",href:"#setup-server"},"Setup: Server")," for more details.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run the frontend client ",(0,l.kt)("strong",{parentName:"p"},"in a separate terminal tab")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make client_run\n")),(0,l.kt)("p",{parentName:"li"},"This will ensure the frontend dependencies are installed and will\nautomatically launch the browser and open the app at milmovelocal:3000.\nSee ",(0,l.kt)("a",{parentName:"p",href:"#setup-milmove-local-client"},"Setup: MilMove Local Client")," for more details."))),(0,l.kt)("h4",{id:"setup-dependencies"},"Setup: Dependencies"),(0,l.kt)("p",null,"This step will check your system for any setup issues. Then it will ensure that you have installed ",(0,l.kt)("inlineCode",{parentName:"p"},"pre-commit"),"\nand go on to install the client (javascript) and server (golang) dependencies for you. If you are interested in\nmore details, you can look at the sections under this one, but it's not required."),(0,l.kt)("h5",{id:"setup-pre-commit"},"Setup: Pre-Commit"),(0,l.kt)("p",null,"Part of the ",(0,l.kt)("inlineCode",{parentName:"p"},"pre-commit")," setup run by the ",(0,l.kt)("inlineCode",{parentName:"p"},"make deps")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"make deps_nix")," commands.\nThey in turn run"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit install\n")),(0,l.kt)("p",null,"to install a pre-commit hook into ",(0,l.kt)("inlineCode",{parentName:"p"},"./git/hooks/pre-commit"),". This must be done so\nthat the hook will check files you are about to commit to the repository."),(0,l.kt)("p",null,"Next it installs the ",(0,l.kt)("inlineCode",{parentName:"p"},"pre-commit")," hook libraries with"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit install-hooks\n")),(0,l.kt)("p",null,"If you ever want to run the ",(0,l.kt)("inlineCode",{parentName:"p"},"pre-commit")," hooks for all files, you can run"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit run -a\n")),(0,l.kt)("p",null,"though before you can do that, you'll need to have installed the ",(0,l.kt)("inlineCode",{parentName:"p"},"javascript")," dependencies and generated some ",(0,l.kt)("inlineCode",{parentName:"p"},"golang"),"\ncode from Swagger files. Once you've finished setting up your project locally, you should be good to go. If you want\nto skip ahead and be able to run ",(0,l.kt)("inlineCode",{parentName:"p"},"pre-commit")," checks since now, you can run"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make pre_commit_tests\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make server_generate client_deps && pre-commit run -a\n")),(0,l.kt)("h6",{id:"pre-commit-troubleshooting-manual-process-hanging-on-install-hooks"},"Pre-Commit Troubleshooting (Manual): Process hanging on install hooks"),(0,l.kt)("p",null,"If any pre-commit commands (or ",(0,l.kt)("inlineCode",{parentName:"p"},"make deps"),") result in hanging or incomplete\ninstallation, remove the pre-commit cache and the ",(0,l.kt)("inlineCode",{parentName:"p"},".client_deps.stamp")," and try again:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"rm -rf ~/.cache/pre-commit\nrm .client_deps.stamp\n")),(0,l.kt)("h6",{id:"pre-commit-troubleshooting-nix-ssl-certificate-verify-failed"},"Pre-Commit Troubleshooting (Nix): SSL: CERTIFICATE VERIFY FAILED"),(0,l.kt)("p",null,"This can happen because of the way certs need to be handled in this project and ",(0,l.kt)("inlineCode",{parentName:"p"},"nix"),". To get around this issue, you\ncan try running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"NIX_SSL_CERT_FILE=$HOME/.nix-profile/etc/ssl/certs/ca-bundle.crt <pre-commit related command>\n")),(0,l.kt)("p",null,"E.g."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"NIX_SSL_CERT_FILE=$HOME/.nix-profile/etc/ssl/certs/ca-bundle.crt pre-commit install-hooks\n")),(0,l.kt)("h5",{id:"setup-database"},"Setup: Database"),(0,l.kt)("p",null,"You will need to setup a local database before you can begin working on the local server / client. Docker will need to\nbe running for any of this to work."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Creates a PostgreSQL docker container for dev, if it doesn't exist already, and starts/runs it."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make db_dev_run\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Runs all existing database migrations for dev database, which does things like creating table structures, etc.\nYou will run this command again anytime you add new migrations to the app (see below for more)."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make db_dev_migrate\n")))),(0,l.kt)("p",null,"You can validate that your dev database is running by running"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"psql-dev\n")),(0,l.kt)("p",null,"This puts you in a PostgreSQL shell. To show all the tables, type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"\\dt\n")),(0,l.kt)("p",null,"If you want to exit out of the PostgreSQL shell, type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"\\q\n")),(0,l.kt)("p",null,"If you are stuck on this step you may need to see the section on Troubleshooting."),(0,l.kt)("h5",{id:"setup-server"},"Setup: Server"),(0,l.kt)("p",null,"This step installs dependencies, then builds and runs the server using ",(0,l.kt)("inlineCode",{parentName:"p"},"gin"),", which is a hot reloading go server.\nIt will listen on port ",(0,l.kt)("inlineCode",{parentName:"p"},"8080")," and will rebuild the actual server any time a go file changes."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run\n")),(0,l.kt)("p",null,"To have hot reloading of the entire application (at least for the customer side), pair the above with"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make client_run\n")),(0,l.kt)("p",null,"In rare cases, you may want to run the server standalone, in which case you can run"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run_standalone\n")),(0,l.kt)("p",null,"This will build both the client and the server and this invocation can be relied upon to be serving the client JS on\nits own rather than relying on webpack doing so. You can run this without running ",(0,l.kt)("inlineCode",{parentName:"p"},"make client_run")," and the whole app\nshould work."),(0,l.kt)("h6",{id:"server-dependencies"},"Server Dependencies"),(0,l.kt)("p",null,"Dependencies are managed by ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/golang/go/wiki/Modules"},"go modules"),". New dependencies are automatically\ndetected in import statements and added to ",(0,l.kt)("inlineCode",{parentName:"p"},"go.mod")," when you run"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go build\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go run\n")),(0,l.kt)("p",null,"You can also manually edit ",(0,l.kt)("inlineCode",{parentName:"p"},"go.mod")," as needed."),(0,l.kt)("p",null,"If you need to add a Go-based tool dependency that is otherwise not imported by our code, import it in\n",(0,l.kt)("inlineCode",{parentName:"p"},"pkg/tools/tools.go"),"."),(0,l.kt)("p",null,"After importing ",(0,l.kt)("em",{parentName:"p"},"any")," go dependency it's a good practice to run"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go mod tidy\n")),(0,l.kt)("p",null,"which prunes unused dependencies and calculates dependency requirements for all possible system architectures."),(0,l.kt)("h5",{id:"setup-milmove-local-client"},"Setup: MilMove Local Client"),(0,l.kt)("p",null,"Commands in this section:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make client_build\n")),(0,l.kt)("p",null,"and"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make client_run\n")),(0,l.kt)("p",null,"These will start the webpack dev server, serving the frontend on port 3000. If paired with"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run\n")),(0,l.kt)("p",null,"then the whole app will work, the webpack dev server proxies all API calls through to the server."),(0,l.kt)("p",null,"If both the server and client are running, you should be able to view the Swagger UI at\n",(0,l.kt)("a",{parentName:"p",href:"http://milmovelocal:3000/swagger-ui/internal.html"},"http://milmovelocal:3000/swagger-ui/internal.html"),". If it does not, try running"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make client_build\n")),(0,l.kt)("p",null,"(this only needs to be run the first time)."),(0,l.kt)("p",null,"Dependencies are managed by ",(0,l.kt)("inlineCode",{parentName:"p"},"yarn"),". To add a new dependency, use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add\n")),(0,l.kt)("h3",{id:"other-possible-setups"},"Other Possible Setups"),(0,l.kt)("p",null,"The instructions so far have been for getting the project up and running, but focused on the client/customer side.\nThere are more things you can set up in the following sections."),(0,l.kt)("h4",{id:"setup-office-local-client"},"Setup: Office Local client"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Ensure that you have a test account which can log into the office site. To load test data, run:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make db_dev_e2e_populate\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make office_client_run\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},'Log into "Local Sign In" and either select a pre-made user or use the button to create a new user'))),(0,l.kt)("h4",{id:"setup-admin-local-client"},"Setup: Admin Local client"),(0,l.kt)("p",null,"Run"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make admin_client_run\n")),(0,l.kt)("h4",{id:"setup-orders-gateway"},"Setup: Orders Gateway"),(0,l.kt)("p",null,"Nothing to do."),(0,l.kt)("h4",{id:"setup-prime-api"},"Setup: Prime API"),(0,l.kt)("p",null,"The API that the Prime will use is authenticated via mutual TSL so there are a few things you need to do to interact\nwith it in a local environment."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Make sure that the ",(0,l.kt)("inlineCode",{parentName:"p"},"primelocal")," alias is setup for localhost"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Check your ",(0,l.kt)("inlineCode",{parentName:"li"},"/etc/hosts")," file for an entry for ",(0,l.kt)("inlineCode",{parentName:"li"},"primelocal"),"."))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"make server_run\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Access the Prime API using the devlocal-mtls certs. There is a script that shows you how to do this with curl\nat ",(0,l.kt)("inlineCode",{parentName:"p"},"./scripts/prime-api"),". For instance to call the ",(0,l.kt)("inlineCode",{parentName:"p"},"move-task-orders")," endpoint, run"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"./scripts/prime-api move-task-orders\n")))),(0,l.kt)("h2",{id:"development"},"Development"),(0,l.kt)("h3",{id:"goland"},"GoLand"),(0,l.kt)("p",null,"GoLand supports\n",(0,l.kt)("a",{parentName:"p",href:"https://blog.jetbrains.com/go/2019/02/06/debugging-with-goland-getting-started/#debugging-a-running-application-on-the-local-machine"},"attaching the debugger to a running process"),",\nhowever this requires that the server has been built with specific flags. If you wish to use this feature in\ndevelopment add the following line ",(0,l.kt)("inlineCode",{parentName:"p"},"export GOLAND=1")," to your ",(0,l.kt)("inlineCode",{parentName:"p"},".envrc.local"),". Once the server starts follow the steps\noutlined in the article above and you should now be able to set breakpoints using the GoLand debugger."),(0,l.kt)("h4",{id:"goland-nix"},"Goland: Nix"),(0,l.kt)("p",null,"To get Goland to play nicely with ",(0,l.kt)("inlineCode",{parentName:"p"},"nix"),", there's a few things you can set up:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Update ",(0,l.kt)("inlineCode",{parentName:"li"},"GOROOT")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"/nix/var/nix/profiles/mymove/bin/go"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Note that once you add it, Goland will resolve it to the actual path (the one above is a link), so it\u2019ll look\nsomething like ",(0,l.kt)("inlineCode",{parentName:"li"},"/nix/store/rv16prybnsmav8w1sqdgr80jcwsja98q-go-1.19.3/bin/go")))),(0,l.kt)("li",{parentName:"ul"},"Update ",(0,l.kt)("inlineCode",{parentName:"li"},"GOPATH")," to point to the ",(0,l.kt)("inlineCode",{parentName:"li"},".gopath")," dir in the ",(0,l.kt)("inlineCode",{parentName:"li"},"mymove")," repo",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"You may need to create the ",(0,l.kt)("inlineCode",{parentName:"li"},".gopath")," dir yourself."))),(0,l.kt)("li",{parentName:"ul"},"Update Node and NPM:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Node interpreter: ",(0,l.kt)("inlineCode",{parentName:"li"},"/nix/var/nix/profiles/mymove/bin/node")),(0,l.kt)("li",{parentName:"ul"},"Package manager:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"This might be fixed automatically, but if not, you can point it ",(0,l.kt)("inlineCode",{parentName:"li"},"/nix/var/nix/profiles/mymove/bin/yarn")),(0,l.kt)("li",{parentName:"ul"},"Similar to ",(0,l.kt)("inlineCode",{parentName:"li"},"GOROOT"),", it will resolve to something that looks like\n",(0,l.kt)("inlineCode",{parentName:"li"},"/nix/store/cnmxp5isc3ck1bm11zryy8dnsbnm87wk-yarn-1.22.10/libexec/yarn"))))))))}m.isMDXComponent=!0}}]);