"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[1353],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||c[m]||a;return n?i.createElement(k,l(l({ref:t},d),{},{components:n})):i.createElement(k,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},15246:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var i=n(87462),r=(n(67294),n(3905));const a={sidebar_position:1},l="Acceptance Testing Prime API",o={unversionedId:"api/testing/acceptance-testing-prime-api-endpoints",id:"api/testing/acceptance-testing-prime-api-endpoints",title:"Acceptance Testing Prime API",description:"Current Prime API Endpoints",source:"@site/docs/api/testing/acceptance-testing-prime-api-endpoints.md",sourceDirName:"api/testing",slug:"/api/testing/acceptance-testing-prime-api-endpoints",permalink:"/mymove-docs/docs/api/testing/acceptance-testing-prime-api-endpoints",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/api/testing/acceptance-testing-prime-api-endpoints.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"apiSidebar",previous:{title:"How to Deprecate an API Endpoint",permalink:"/mymove-docs/docs/api/guides/how-to-deprecate-endpoints"},next:{title:"End to End Testing Playing the Prime",permalink:"/mymove-docs/docs/api/testing/end-to-end-testing-playing-the-prime"}},s={},p=[{value:"Current Prime API Endpoints",id:"current-prime-api-endpoints",level:2},{value:"Checklist for Acceptance Testing Prime API Endpoints",id:"checklist-for-acceptance-testing-prime-api-endpoints",level:2},{value:"1. Verify Business Logic",id:"1-verify-business-logic",level:3},{value:"2. Validate Requests",id:"2-validate-requests",level:3},{value:"3. Validate Responses",id:"3-validate-responses",level:3},{value:"4. Validate Errors",id:"4-validate-errors",level:3}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"acceptance-testing-prime-api"},"Acceptance Testing Prime API"),(0,r.kt)("h2",{id:"current-prime-api-endpoints"},"Current Prime API Endpoints"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fetchMTOUpdates")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"updateMTOPostCounselingInformation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"createMTOShipment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"updateMTOShipment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"createMTOServiceItem")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"createPaymentRequest")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"createUpload")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"createMTOAgent"))),(0,r.kt)("h2",{id:"checklist-for-acceptance-testing-prime-api-endpoints"},"Checklist for Acceptance Testing Prime API Endpoints"),(0,r.kt)("h3",{id:"1-verify-business-logic"},"1. Verify Business Logic"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"available_to_prime_at")," will have a timestamp if in production environment"),(0,r.kt)("li",{parentName:"ul"},"business logic should be tested in test cases")),(0,r.kt)("h3",{id:"2-validate-requests"},"2. Validate Requests"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"all requests fields should be defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"prime.yaml")),(0,r.kt)("li",{parentName:"ul"},"[un]","required fields should properly denoted"),(0,r.kt)("li",{parentName:"ul"},"fields that are provided in the response but not valid in the request should be marked ",(0,r.kt)("inlineCode",{parentName:"li"},"readOnly")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"etag")," should be marked as ",(0,r.kt)("inlineCode",{parentName:"li"},"readOnly")," in the yaml - It should never be in the request payload"),(0,r.kt)("li",{parentName:"ul"},"all fields should have a meaningful description visible in the Redoc")),(0,r.kt)("h3",{id:"3-validate-responses"},"3. Validate Responses"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"all response fields should be defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"prime.yaml")),(0,r.kt)("li",{parentName:"ul"},"[un]","required fields should properly denoted"),(0,r.kt)("li",{parentName:"ul"},"fields that are used in the request but not valid in the response should be marked ",(0,r.kt)("inlineCode",{parentName:"li"},"writeOnly")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pointOfContact")," should be marked as ",(0,r.kt)("inlineCode",{parentName:"li"},"writeOnly")," - It's a logged field which should never be in the response."),(0,r.kt)("li",{parentName:"ul"},"all fields should have a meaningful description visible in the Redoc")),(0,r.kt)("h3",{id:"4-validate-errors"},"4. Validate Errors"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"all error fields should be defined in ",(0,r.kt)("inlineCode",{parentName:"li"},"prime.yaml")),(0,r.kt)("li",{parentName:"ul"},"error responses should be meaningful and follow our ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/guides/api-errors"},"desired pattern"),"."),(0,r.kt)("li",{parentName:"ul"},"errors we like to use:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"401 - Unauthorized"),": requester is not properly authorized to make request"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"422 - Unprocessable Entity"),": validation errors, missing values, invalid values"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"409 - Conflict Error"),": Cannot process the request due to the current state of the server (for e.g., we cannot change this value once this date is past)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"404 - Not Found"),": Requested resource does not exist and the server does not know if it ever existed.")),(0,r.kt)("p",null,"For more detail on how to generate and return errors, ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/guides/api-errors"},"API Errors")),(0,r.kt)("p",null,"For a working complete list of MTO database field description, ",(0,r.kt)("a",{parentName:"p",href:"https://docs.google.com/spreadsheets/d/1pQVZdi5ttQ67DIcBAgk9INUH9oVqTDpzL2ciMAJuBV8/edit#gid=0"},"see here")))}c.isMDXComponent=!0}}]);