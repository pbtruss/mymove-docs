"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[3403],{52113:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var o=n(87462),a=(n(67294),n(3905));n(29420);const i={},l="Pre-Commit",r={unversionedId:"about/application-setup/dependencies/pre-commit",id:"about/application-setup/dependencies/pre-commit",title:"Pre-Commit",description:"Part of the pre-commit setup run by the make deps or make deps_nix commands.",source:"@site/docs/about/application-setup/dependencies/pre-commit.md",sourceDirName:"about/application-setup/dependencies",slug:"/about/application-setup/dependencies/pre-commit",permalink:"/mymove-docs/docs/about/application-setup/dependencies/pre-commit",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/about/application-setup/dependencies/pre-commit.md",tags:[],version:"current",frontMatter:{},sidebar:"aboutSidebar",previous:{title:"Dependencies",permalink:"/mymove-docs/docs/about/application-setup/dependencies/"},next:{title:"Direnv",permalink:"/mymove-docs/docs/about/application-setup/direnv"}},s={},p=[{value:"Pre-Commit Troubleshooting (Manual): Process hanging on install hooks",id:"pre-commit-troubleshooting-manual-process-hanging-on-install-hooks",level:2},{value:"Pre-Commit Troubleshooting (Nix): SSL: CERTIFICATE VERIFY FAILED",id:"pre-commit-troubleshooting-nix-ssl-certificate-verify-failed",level:2}],m={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pre-commit"},"Pre-Commit"),(0,a.kt)("p",null,"Part of the ",(0,a.kt)("inlineCode",{parentName:"p"},"pre-commit")," setup run by the ",(0,a.kt)("inlineCode",{parentName:"p"},"make deps")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"make deps_nix")," commands.\nThey in turn run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit install\n")),(0,a.kt)("p",null,"to install a pre-commit hook into ",(0,a.kt)("inlineCode",{parentName:"p"},"./git/hooks/pre-commit"),". This must be done so\nthat the hook will check files you are about to commit to the repository."),(0,a.kt)("p",null,"Next it installs the ",(0,a.kt)("inlineCode",{parentName:"p"},"pre-commit")," hook libraries with"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit install-hooks\n")),(0,a.kt)("p",null,"If you ever want to run the ",(0,a.kt)("inlineCode",{parentName:"p"},"pre-commit")," hooks for all files, you can run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit run -a\n")),(0,a.kt)("p",null,"though before you can do that, you'll need to have installed the ",(0,a.kt)("inlineCode",{parentName:"p"},"javascript")," dependencies and generated some ",(0,a.kt)("inlineCode",{parentName:"p"},"golang"),"\ncode from Swagger files. Once you've finished setting up your project locally, you should be good to go. If you want\nto skip ahead and be able to run ",(0,a.kt)("inlineCode",{parentName:"p"},"pre-commit")," checks since now, you can run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"make pre_commit_tests\n")),(0,a.kt)("p",null,"or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"make server_generate client_deps && pre-commit run -a\n")),(0,a.kt)("h2",{id:"pre-commit-troubleshooting-manual-process-hanging-on-install-hooks"},"Pre-Commit Troubleshooting (Manual): Process hanging on install hooks"),(0,a.kt)("p",null,"If any pre-commit commands (or ",(0,a.kt)("inlineCode",{parentName:"p"},"make deps"),") result in hanging or incomplete\ninstallation, remove the pre-commit cache and the ",(0,a.kt)("inlineCode",{parentName:"p"},".client_deps.stamp")," and try again:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"rm -rf ~/.cache/pre-commit\nrm .client_deps.stamp\n")),(0,a.kt)("h2",{id:"pre-commit-troubleshooting-nix-ssl-certificate-verify-failed"},"Pre-Commit Troubleshooting (Nix): SSL: CERTIFICATE VERIFY FAILED"),(0,a.kt)("p",null,"This can happen because of the way certs need to be handled in this project and ",(0,a.kt)("inlineCode",{parentName:"p"},"nix"),". To get around this issue, you\ncan try running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"NIX_SSL_CERT_FILE=$HOME/.nix-profile/etc/ssl/certs/ca-bundle.crt <pre-commit related command>\n")),(0,a.kt)("p",null,"E.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"NIX_SSL_CERT_FILE=$HOME/.nix-profile/etc/ssl/certs/ca-bundle.crt pre-commit install-hooks\n")))}c.isMDXComponent=!0}}]);