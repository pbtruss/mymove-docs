"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[9361],{3905:function(e,t,o){o.d(t,{Zo:function(){return d},kt:function(){return u}});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(o),u=r,h=p["".concat(l,".").concat(u)]||p[u]||m[u]||a;return o?n.createElement(h,i(i({ref:t},d),{},{components:o})):n.createElement(h,i({ref:t},d))}));function u(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}p.displayName="MDXCreateElement"},79487:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var n=o(87462),r=o(63366),a=(o(67294),o(3905)),i=["components"],s={},l="How to Upload Electronic Orders Using your CAC",c={unversionedId:"dev/tools/CAC/upload-electronic-orders",id:"dev/tools/CAC/upload-electronic-orders",isDocsHomePage:!1,title:"How to Upload Electronic Orders Using your CAC",description:"Requirements",source:"@site/docs/dev/tools/CAC/upload-electronic-orders.md",sourceDirName:"dev/tools/CAC",slug:"/dev/tools/CAC/upload-electronic-orders",permalink:"/mymove-docs/docs/dev/tools/CAC/upload-electronic-orders",editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/dev/tools/CAC/upload-electronic-orders.md",tags:[],version:"current",frontMatter:{},sidebar:"devSidebar",previous:{title:"Using-your-CAC-in-Browsers-on-MacOS",permalink:"/mymove-docs/docs/dev/tools/CAC/Using-your-CAC-in-Browsers-on-MacOS"},next:{title:"How to Create CAC Access (for using Prime API and uploading Electronic Orders)",permalink:"/mymove-docs/docs/dev/tools/CAC/use-mtls-with-cac"}},d=[{value:"Requirements",id:"requirements",children:[]},{value:"Uploading Electronic Orders Locally with transcom/milmove_orders",id:"uploading-electronic-orders-locally-with-transcommilmove_orders",children:[]},{value:"Uploading Electronic Orders Locally with transcom/nom",id:"uploading-electronic-orders-locally-with-transcomnom",children:[]},{value:"Note on IWS RBS for EDIPI/SSN conversion",id:"note-on-iws-rbs-for-edipissn-conversion",children:[{value:"Updating the Sample CSV for transcom/nom",id:"updating-the-sample-csv-for-transcomnom",children:[]}]}],m={toc:d};function p(e){var t=e.components,o=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-upload-electronic-orders-using-your-cac"},"How to Upload Electronic Orders Using your CAC"),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,"You must first read the article on ",(0,a.kt)("a",{parentName:"p",href:"/mymove-docs/docs/dev/tools/CAC/use-mtls-with-cac"},"How to Use mTLS with CAC"),"."),(0,a.kt)("h2",{id:"uploading-electronic-orders-locally-with-transcommilmove_orders"},"Uploading Electronic Orders Locally with ",(0,a.kt)("a",{parentName:"h2",href:"https://github.com/transcom/milmove_orders/"},"transcom/milmove_orders")),(0,a.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"MilMove Orders Repo Archived")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The MilMove Orders repo has been archived so this section is no longer valid for now. Post-MVP there is a plan to have\nsome of that functionality back, but it hasn't been decided if that same repo will be used or something else."))),(0,a.kt)("p",null,"Use the transcom/milmove_orders repo with ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/transcom/milmove_orders/blob/master/testdata/nom_demo_20190404.csv"},"sample navy orders data"),". "),(0,a.kt)("p",null,"Then run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"direnv allow\nmake bin/orders-api-client\n")),(0,a.kt)("p",null,"Run the mymove server at ",(0,a.kt)("inlineCode",{parentName:"p"},"https://github.com/transcom/mymove"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"make server_run\n")),(0,a.kt)("p",null,"Then run this command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"orders-api-client --cac --hostname orderslocal --port 9443 --insecure post-revisions --issuer navy --csv-file testdata/nom_demo_20190404.csv\n")),(0,a.kt)("h2",{id:"uploading-electronic-orders-locally-with-transcomnom"},"Uploading Electronic Orders Locally with ",(0,a.kt)("a",{parentName:"h2",href:"https://github.com/transcom/nom/"},"transcom/nom")),(0,a.kt)("p",null,"Use the transcom/nom repo with ",(0,a.kt)("a",{parentName:"p",href:"https://drive.google.com/drive/folders/1dxOO9uXSOWfjQiKMzwX3bmRqBJfBLldi"},"sample navy orders data"),". "),(0,a.kt)("p",null,"Then run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"direnv allow\nmake server_run\n")),(0,a.kt)("p",null,"To continue you need to get the Token from the CAC with a script in transcom/mymove (Becomes ",(0,a.kt)("inlineCode",{parentName:"p"},"ENTERYOURTOKEN")," in following step):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"cac-extract-token-label\n")),(0,a.kt)("p",null,"Now over in your git checkout of the transcom/nom repo. Then download the ",(0,a.kt)("a",{parentName:"p",href:"https://drive.google.com/open?id=1-zxetfRhLEpnx1SBTAveoTLpwEzp3fK-"},"sample csv")," into the repo. And run these commands (",(0,a.kt)("strong",{parentName:"p"},"NOTE:")," you will need your CAC personal PIN to do this operation):"),(0,a.kt)("p",null,"For MacOS 10.14 and earlier:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'make bin/nom\nTOKEN="ENTERYOURTOKEN"\nMODULE="/usr/local/lib/pkcs11/cackey.dylib"\nbin/nom -host orderslocal -port 9443 -insecure -pkcs11module "${MODULE}" -certlabel "Identity #0" -keylabel "Identity #0" --tokenlabel "${TOKEN}" nom_demo_20190404.csv\nPIN: ********\n')),(0,a.kt)("p",null,"For MacOS 10.15 and later"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'make bin/nom\nTOKEN="ENTERYOURTOKEN"\nMODULE="/usr/local/lib/pkcs11/opensc-pkcs11.so"\nbin/nom -host orderslocal -port 9443 -insecure -pkcs11module "${MODULE}" nom_demo_20190404.csv\nPIN: ********\n')),(0,a.kt)("h2",{id:"note-on-iws-rbs-for-edipissn-conversion"},"Note on IWS RBS for EDIPI/SSN conversion"),(0,a.kt)("p",null,"It's important that the SSNs match the ones in the DMDC Contractor Test database. You can see the ",(0,a.kt)("a",{parentName:"p",href:"https://drive.google.com/file/d/1vfxEaC6cadFtMlTGFZsy95P52poKLaXA/view"},"set of contractor test SSN's"),". However, if you don't want to connect to DMDC's IWS RBS service you can turn off IWS on the devlocal server by setting this env var (which is the default in the ",(0,a.kt)("inlineCode",{parentName:"p"},".envrc"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"export IWS_RBS_ENABLED=0\n")),(0,a.kt)("p",null,"Otherwise set:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'export IWS_RBS_ENABLED=1\nexport IWS_RBS_HOST="pkict.dmdc.osd.mil"\n')),(0,a.kt)("h3",{id:"updating-the-sample-csv-for-transcomnom"},"Updating the Sample CSV for transcom/nom"),(0,a.kt)("p",null,"The data in transcom/nom ",(0,a.kt)("inlineCode",{parentName:"p"},"sample.csv")," is generated from data in the fake records hosted by the DMDC. Copies of\nthe fake data exist in CSV/Excel files in the ",(0,a.kt)("a",{parentName:"p",href:"https://drive.google.com/drive/folders/16k7eG4j5vSBQIX_eTWnoXqiae1T0ysiq"},"USTC MilMove -> Integrations -> Identity Web Services -> Developer Samples")," folder. The latest set of data is ",(0,a.kt)("a",{parentName:"p",href:"https://drive.google.com/drive/folders/16k7eG4j5vSBQIX_eTWnoXqiae1T0ysiq"},"Cust2675_TRANSCOM_20190823_Demo2"),". If you need to update\nthis data you will need to contact DMDC as they refresh the data from time to time."),(0,a.kt)("p",null,"Tip: If you want to skip the DMDC lookup by providing fake SSNs in the spreadsheet you can put 10 digit numbers (starting with any digit other than 0) instead of 9 digit numbers in the SSN column in the CSV. It's still worthwhile to test the whole pipeline, obviously, but sometimes the DMDC part is more trouble than it's worth."))}p.isMDXComponent=!0}}]);