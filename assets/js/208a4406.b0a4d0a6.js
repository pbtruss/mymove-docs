"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[7583],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(b,c(c({ref:t},l),{},{components:r})):n.createElement(b,c({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var u=2;u<o;u++)c[u]=r[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},54550:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_position:7},c="Usage",i={unversionedId:"backend/guides/service-objects/usage",id:"backend/guides/service-objects/usage",title:"Usage",description:"Service objects are often used in other services, but they're most commonly used by our handler functions. Handlers are",source:"@site/docs/backend/guides/service-objects/usage.md",sourceDirName:"backend/guides/service-objects",slug:"/backend/guides/service-objects/usage",permalink:"/mymove-docs/docs/backend/guides/service-objects/usage",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/backend/guides/service-objects/usage.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"backendSidebar",previous:{title:"Implementation",permalink:"/mymove-docs/docs/backend/guides/service-objects/implementation"},next:{title:"Backend Structure",permalink:"/mymove-docs/docs/backend/guides/backend-structure"}},s={},u=[],l={toc:u};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Service objects are often used in other services, but they're most commonly used by our handler functions. Handlers are\nthe ",(0,a.kt)("strong",{parentName:"p"},"presentation layer")," of our backend, and they correspond to API endpoints."),(0,a.kt)("p",null,"In either case, they will be used in much the same way. Service objects are often (although not necessarily) defined as\na dependency in a struct:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"// CreatePetHandler is the handler for the API endpoint to create a pet\ntype CreatePetHandler struct {\n    handlers.HandlerConfig\n    creator services.PetCreator // our service object\n}\n")),(0,a.kt)("p",null,"When that struct is being instantiated, they are created using their ",(0,a.kt)("inlineCode",{parentName:"p"},"New<MyServiceObject>")," function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"// First we need to initialize our service object. Here we're using the Customer version, which needs the string checker\npetCreator := pet.NewCustomerPetCreator(stringchecker.NewStringChecker)\n\n// Create an instance of CreatePetHandler, passing it the creator, and assign it to our generated Swagger Go code\ninternalAPI.PetCreatePetHandler = CreatePetHandler{\n    ctx,\n    petCreator,\n}\n")),(0,a.kt)("p",null,"And finally, once the service object is instantiated, it will be used by calling the function defined in the interface\ntype:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"// Call the service object using the creator set in our handler struct (`h` is the struct reference in this receiver \n// func)\ncreatedPet, err := h.creator.CreatePet(appCtx, newPet)\n")))}d.isMDXComponent=!0}}]);